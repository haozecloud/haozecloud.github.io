[{"title":"DNS配置","path":"/2023/09/27/dns/DNS配置/","content":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148./configure --prefix=/usr/local/bind/ --with-openssl=/usr/ --sysconfdir=/etc/ --with-libtool --enable-threads--prefix=/usr/local/bind #指定bind9的安装目录,默认是/usr/local--enable-threads #开启多线程的支持；如果你的系统有多个CPU，那么可以使用这个选项--disable-openssl-version-check #关闭openssl的检查--with-openssl=/usr/local/openssl #指定openssl的安装路径--sysconfdir=/etc/ #设置named.conf配置文件放置的目录，默认是--prefix选项指定的目录下的/etc下--localstatdir=/var #设置 run/named.pid 放置的目录，默认是--prefix选项指定的目录下的/var下--with-libtool #BIND的库文件编译为动态共享库文件，这个选项默认是未选择的。 如果不选这个选项，那么编译后的named命令会比较大，lib目录 中的库文件都是.a后缀的 --disable-chroot #禁用chroot，不建议使用，默认开启此功能make &amp;&amp; make install#添加系统变量vi ~/.bash_profilePATH=$PATH:$HOME/bin:/usr/local/bind/bin:/usr/local/bind/bin:/usr/local/bind/sbin #修改本行source ~/.bash_profile #使修改生效 #添加运行用户useradd -r named # -r 添加系统用户#启用chrootmkdir -p /var/named/chroot/&#123;var,etc,dev&#125;mkdir /var/named/chroot/var/run#创建虚拟设备cd /var/named/chroot/devmknod random c 1 8 mknod zero c 1 5 mknod null c 1 3#修改run目录属主chown -R named:named /var/named/chroot/var/run #named 要向run目录写入pid文件#生成rndc.conf ，以便使用rndc命令管理bindrndc-confgen将生成的内容分别写入/etc/named.conf和/etc/rndc.conf #这里在测试中，named.conf是写入chroot之后的etc而rndc.conf写如chroot之后的etc却提示找不到，写入真实的/etc下则正常#创建配置文件vi /var/named/chroot/etc/named.confkey &quot;rndc-key&quot; &#123; algorithm hmac-md5; secret &quot;BM+rI8Ra3mpKKtIlYpGEAQ==&quot;; &#125;;controls &#123; inet 127.0.0.1 port 953 allow &#123; 127.0.0.1; &#125; keys &#123; &quot;rndc-key&quot;; &#125;;&#125;;options &#123; directory &quot;/var&quot;; pid-file &quot;/var/run/named.pid&quot;; version &quot;bind 9.9.3&quot;; allow-query &#123;any;&#125;; forwarders &#123; #如果想让dns同时可以解析外网，可使用forward功能； 192.168.1.253; &#125;;&#125;;zone &quot;.&quot; IN &#123; type hint; file &quot;named.root&quot;;&#125;;zone &quot;lxy.com&quot; IN &#123; type master; file &quot;named.lxy.com&quot;;&#125;;vi /etc/rndc.confkey &quot;rndc-key&quot; &#123; algorithm hmac-md5; secret &quot;BM+rI8Ra3mpKKtIlYpGEAQ==&quot;;&#125;;options &#123; default-key &quot;rndc-key&quot;; default-server 127.0.0.1; default-port 953;&#125;;#ZONE文件内容：vi /var/named/chroot/var/named.lxy.kk #正解析的zone，如果想让dns可以解析外网，就不要包含.com等合法域，不然在试图解析合法域名的时候服务器会在本地寻找记录，当然是找 不到的，它会告诉你找不到，而不会去向forward请求。$TTL 86400@ IN SOA lxy.kk. root.lxy.kk. ( 2008080804 ; 28800 ; 14400 ; 3600000 ; 86400 ) ;@ IN NS dns.lxy.kk.@ IN MX 10 mail.lxy.kk.dns IN A 192.168.127.129mail IN A 192.168.127.130www IN A 192.168.127.129vi /var/named/chroot/named.127.0.0 #反向解析的zone$TTL 86400@ IN SOA dns.lxy.kk. root.lxy.kk. ( 2008080804 ; 28800 ; 14400 ; 3600000 ; 86400 ) ;@ IN NS dns.lxy.kk.1 IN PTR localhost.#启动服务named -c /etc/named.conf -t /var/named/chroot -u named #注意这里的/etc/实际指的是chroot下的etc,因为已经使用-t指定了chroot到的目录，named将视chroot为根目录#rndcrndc reload | status等","categories":["Linux","DNS"]},{"title":"DHCP配置","path":"/2023/09/26/dhcp/DHCP/","content":"1234567891011121314151617181920212223242526## DHCP Server Configuration file.# see /usr/share/doc/dhcp*/dhcpd.conf.example# see dhcpd.conf(5) man pageddns-update-style interim;ignore client-updates;authoritative;allow booting;allow bootp;allow unknown-clients;# A slightly different configuration for an internal subnet. subnet 192.168.100.0 netmask 255.255.255.0&#123; range 192.168.100.20 192.168.100.80; option domain-name-servers 192.168.100.2; option domain-name &quot;server1.example.com&quot;; option routers 192.168.100.1; option broadcast-address 192.168.100.255; default-lease-time 600; max-lease-time 7200; # PXE SERVER IP next-server 192.168.100.130; # DHCP server ip filename &quot;pxelinux.0&quot;; &#125;","categories":["Linux","DHCP"]},{"title":"MySQL数据库备份mysqldump","path":"/2023/09/25/MySQL数据库备份mysqldump/","content":"@TOC 前言MySQL是一个广泛使用的开源关系型数据库管理系统，可用于存储和管理数据。为了保护数据，我们需要定期备份数据库，以便在数据丢失或损坏时可以恢复数据。在本文中，我将介绍如何使用mysqldump命令来备份MySQL数据库。 一、关于备份热备份和冷备份热备份是指在MySQL服务器运行时进行备份，这种备份方式不会中断MySQL服务器的正常运行。备份过程中，MySQL服务器仍然可以读写数据库。这种备份方式比较简单，适合数据量不是很大的情况。 冷备份是指在MySQL服务器停止运行时进行备份，这种备份方式需要将MySQL服务器停止运行一段时间，等待备份完成后再启动MySQL服务器。这种备份方式适合数据量较大的情况，因为备份时间较长，备份过程中MySQL服务器无法读写数据库。 一般来说，MySQL备份建议使用多种备份方式相结合，比如使用热备份进行备份，使用冷备份进行灾备。 MySQL备份种类 完全备份（Full Backup）：包含数据表、索引、触发器、存储过程、视图、数据文件等所有内容。 增量备份（Incremental Backup）：只包含最近一次完全备份之后修改过的数据，可以快速恢复最新的数据。 差异备份（Differential Backup）：与增量备份类似，只包含最近一次完全备份之后修改过的数据，但可以通过两个差异备份之间的差异进行恢复，更加高效。 压缩备份（Compressed Backup）：通过对数据进行压缩，减少备份文件的大小，便于存储和传输。 远程备份（Remote Backup）：通过网络传输数据到远程服务器，可以实现数据的分布式备份和恢复。 磁盘备份（Disk Backup）：将MySQL数据库文件和配置文件备份到磁盘上，可以实现快速恢复数据，但恢复速度相对较慢。 文件备份（File Backup）：将MySQL数据库文件和配置文件备份到文件中，可以通过网络传输到其他服务器进行恢复。 不同的备份种类适用于不同的场景，需要根据实际情况进行选择。 二、mysqldump使用步骤通常情况下， mysqldump 是 MySQL 内置的备份工具，可以用来备份和导出MySQL数据库。该工具通过生成一个包含数据库中所有表和表结构的SQL脚本文件，从而实现了数据备份和导出的功能。该脚本文件可以被用来还原MySQL数据库，或者在不同的MySQL服务器之间进行迁移。 常见参数mysqldump是MySQL的备份工具，可以将MySQL数据库的结构和数据备份到指定的文件中。使用mysqldump备份MySQL数据库非常方便，以下是一些常用的mysqldump命令和选项： mysqldump命令用于备份MySQL数据库，语法如下 1mysqldump [OPTIONS] DATABASE [TABLE [TABLE ...]] &gt; DUMPFILE 其中，DATABASE是要备份的数据库名，TABLE是要备份的表名，多个表名之间用空格分隔，–skip-opt选项可以忽略优化选项，–all-databases选项可以备份所有数据库。 常用选项： * b：备份二进制日志文件。 * h HOST：备份数据库所在主机的主机名或IP地址。 * u USERNAME：备份数据库所用的用户名。 * p PASSWORD：备份数据库所用的密码。 * r：将备份文件复制到指定的位置。 * t：只备份指定的数据表，而不备份数据表的其他信息，例如索引、触发器等。 * n：只备份表结构，而不备份表的数据。 备份完成后，可以使用mysql命令加上用户名和密码连接到备份的数据库，查看备份文件中包含的内容，例如： 1mysql -u USERNAME -p PASSWORD DATABASE 创建备份文件使用以下命令创建一个名为 backup.sql 的备份文件： 1mysqldump -u root -p your_database_name &gt; backup.sql 其中，root 是 MySQL 的超级用户，your\\_database\\_name 是要备份的数据库名称。\\&gt; backup.sql 是将备份文件写入 backup.sql 文件中。 执行备份命令如果你需要备份多个数据库或者多个表，可以在 mysqldump 命令中指定相应的选项。以下是备份多个数据库的命令示例： 1mysqldump -u root -p -B your_database_name1 your_database_name2 &gt; backup.sql 其中，\\-B 选项表示备份多个数据库。 检查备份文件备份完成后，可以在 backup.sql 文件中查看备份文件的内容。 恢复数据使用以下命令恢复备份文件中的数据： 1mysql -u root -p your_database_name &lt; backup.sql 其中，root 是 MySQL 的超级用户，your\\_database\\_name 是要恢复的数据库名称。&lt; backup.sql 是从备份文件中读取数据。 注意：在执行恢复命令前，一定要确保已经创建了相应的数据库和表。以上就是使用 mysqldump 进行数据备份和恢复的基本教程。 mysqldump –help123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355[root@mysql5_7 ~]# mysqldump --helpmysqldump Ver 10.13 Distrib 5.7.43, for Linux (x86_64)Copyright (c) 2000, 2023, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Dumping structure and contents of MySQL databases and tables.Usage: mysqldump [OPTIONS] database [tables]OR mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]OR mysqldump [OPTIONS] --all-databases [OPTIONS]Default options are read from the following files in the given order:/etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnfThe following groups are read: mysqldump clientThe following options may be given as the first argument:--print-defaults Print the program argument list and exit.--no-defaults Don&#x27;t read default options from any option file, except for login file.--defaults-file=# Only read default options from the given file #.--defaults-extra-file=# Read this file after the global files are read.--defaults-group-suffix=# Also read groups with concat(group, suffix)--login-path=# Read this path from the login file. -A, --all-databases Dump all the databases. This will be same as --databases with all databases selected. -Y, --all-tablespaces Dump all the tablespaces. -y, --no-tablespaces Do not dump any tablespace information. --add-drop-database Add a DROP DATABASE before each create. --add-drop-table Add a DROP TABLE before each create. (Defaults to on; use --skip-add-drop-table to disable.) --add-drop-trigger Add a DROP TRIGGER before each create. --add-locks Add locks around INSERT statements. (Defaults to on; use --skip-add-locks to disable.) --allow-keywords Allow creation of column names that are keywords. --apply-slave-statements Adds &#x27;STOP SLAVE&#x27; prior to &#x27;CHANGE MASTER&#x27; and &#x27;START SLAVE&#x27; to bottom of dump. --bind-address=name IP address to bind to. --character-sets-dir=name Directory for character set files. -i, --comments Write additional information. (Defaults to on; use --skip-comments to disable.) --compatible=name Change the dump to be compatible with a given mode. By default tables are dumped in a format optimized for MySQL. Legal modes are: ansi, mysql323, mysql40, postgresql, oracle, mssql, db2, maxdb, no_key_options, no_table_options, no_field_options. One can use several modes separated by commas. Note: Requires MySQL server version 4.1.0 or higher. This option is ignored with earlier server versions. --compact Give less verbose output (useful for debugging). Disables structure comments and header/footer constructs. Enables options --skip-add-drop-table --skip-add-locks --skip-comments --skip-disable-keys --skip-set-charset. -c, --complete-insert Use complete insert statements. -C, --compress Use compression in server/client protocol. -a, --create-options Include all MySQL specific create options. (Defaults to on; use --skip-create-options to disable.) -B, --databases Dump several databases. Note the difference in usage; in this case no tables are given. All name arguments are regarded as database names. &#x27;USE db_name;&#x27; will be included in the output. -#, --debug[=#] This is a non-debug version. Catch this and exit. --debug-check This is a non-debug version. Catch this and exit. --debug-info This is a non-debug version. Catch this and exit. --default-character-set=name Set the default character set. --delete-master-logs Delete logs on master after backup. This automatically enables --master-data. -K, --disable-keys &#x27;/*!40000 ALTER TABLE tb_name DISABLE KEYS */; and &#x27;/*!40000 ALTER TABLE tb_name ENABLE KEYS */; will be put in the output. (Defaults to on; use --skip-disable-keys to disable.) --dump-slave[=#] This causes the binary log position and filename of the master to be appended to the dumped data output. Setting the value to 1, will printit as a CHANGE MASTER command in the dumped data output; if equal to 2, that command will be prefixed with a comment symbol. This option will turn --lock-all-tables on, unless --single-transaction is specified too (in which case a global read lock is only taken a short time at the beginning of the dump - don&#x27;t forget to read about --single-transaction below). In all cases any action on logs will happen at the exact moment of the dump.Option automatically turns --lock-tables off. -E, --events Dump events. -e, --extended-insert Use multiple-row INSERT syntax that include several VALUES lists. (Defaults to on; use --skip-extended-insert to disable.) --fields-terminated-by=name Fields in the output file are terminated by the given string. --fields-enclosed-by=name Fields in the output file are enclosed by the given character. --fields-optionally-enclosed-by=name Fields in the output file are optionally enclosed by the given character. --fields-escaped-by=name Fields in the output file are escaped by the given character. -F, --flush-logs Flush logs file in server before starting dump. Note that if you dump many databases at once (using the option --databases= or --all-databases), the logs will be flushed for each database dumped. The exception is when using --lock-all-tables or --master-data: in this case the logs will be flushed only once, corresponding to the moment all tables are locked. So if you want your dump and the log flush to happen at the same exact moment you should use --lock-all-tables or --master-data with --flush-logs. --flush-privileges Emit a FLUSH PRIVILEGES statement after dumping the mysql database. This option should be used any time the dump contains the mysql database and any other database that depends on the data in the mysql database for proper restore. -f, --force Continue even if we get an SQL error. -?, --help Display this help message and exit. --hex-blob Dump binary strings (BINARY, VARBINARY, BLOB) in hexadecimal format. -h, --host=name Connect to host. --ignore-error=name A comma-separated list of error numbers to be ignored if encountered during dump. --ignore-table=name Do not dump the specified table. To specify more than one table to ignore, use the directive multiple times, once for each table. Each table must be specified with both database and table names, e.g., --ignore-table=database.table. --include-master-host-port Adds &#x27;MASTER_HOST=&lt;host&gt;, MASTER_PORT=&lt;port&gt;&#x27; to &#x27;CHANGE MASTER TO..&#x27; in dump produced with --dump-slave. --insert-ignore Insert rows with INSERT IGNORE. --lines-terminated-by=name Lines in the output file are terminated by the given string. -x, --lock-all-tables Locks all tables across all databases. This is achieved by taking a global read lock for the duration of the whole dump. Automatically turns --single-transaction and --lock-tables off. -l, --lock-tables Lock all tables for read. (Defaults to on; use --skip-lock-tables to disable.) --log-error=name Append warnings and errors to given file. --master-data[=#] This causes the binary log position and filename to be appended to the output. If equal to 1, will print it as a CHANGE MASTER command; if equal to 2, that command will be prefixed with a comment symbol. This option will turn --lock-all-tables on, unless --single-transaction is specified too (in which case a global read lock is only taken a short time at the beginning of the dump; don&#x27;t forget to read about --single-transaction below). In all cases, any action on logs will happen at the exact moment of the dump. Option automatically turns --lock-tables off. --max-allowed-packet=# The maximum packet length to send to or receive from server. --net-buffer-length=# The buffer size for TCP/IP and socket communication. --no-autocommit Wrap tables with autocommit/commit statements. -n, --no-create-db Suppress the CREATE DATABASE ... IF EXISTS statement that normally is output for each dumped database if --all-databases or --databases is given. -t, --no-create-info Don&#x27;t write table creation info. -d, --no-data No row information. -N, --no-set-names Same as --skip-set-charset. --opt Same as --add-drop-table, --add-locks, --create-options, --quick, --extended-insert, --lock-tables, --set-charset, and --disable-keys. Enabled by default, disable with --skip-opt. --order-by-primary Sorts each table&#x27;s rows by primary key, or first unique key, if such a key exists. Useful when dumping a MyISAM table to be loaded into an InnoDB table, but will make the dump itself take considerably longer. -p, --password[=name] Password to use when connecting to server. If password is not given it&#x27;s solicited on the tty. -P, --port=# Port number to use for connection. --protocol=name The protocol to use for connection (tcp, socket, pipe, memory). -q, --quick Don&#x27;t buffer query, dump directly to stdout. (Defaults to on; use --skip-quick to disable.) -Q, --quote-names Quote table and column names with backticks (`). (Defaults to on; use --skip-quote-names to disable.) --replace Use REPLACE INTO instead of INSERT INTO. -r, --result-file=name Direct output to a given file. This option should be used in systems (e.g., DOS, Windows) that use carriage-return linefeed pairs (\\r ) to separate text lines. This option ensures that only a single newline is used. -R, --routines Dump stored routines (functions and procedures). --set-charset Add &#x27;SET NAMES default_character_set&#x27; to the output. (Defaults to on; use --skip-set-charset to disable.) --set-gtid-purged[=name] Add &#x27;SET @@GLOBAL.GTID_PURGED&#x27; to the output. Possible values for this option are ON, OFF and AUTO. If ON is used and GTIDs are not enabled on the server, an error is generated. If OFF is used, this option does nothing. If AUTO is used and GTIDs are enabled on the server, &#x27;SET @@GLOBAL.GTID_PURGED&#x27; is added to the output. If GTIDs are disabled, AUTO does nothing. If no value is supplied then the default (AUTO) value will be considered. --single-transaction Creates a consistent snapshot by dumping all tables in a single transaction. Works ONLY for tables stored in storage engines which support multiversioning (currently only InnoDB does); the dump is NOT guaranteed to be consistent for other storage engines. While a --single-transaction dump is in process, to ensure a valid dump file (correct table contents and binary log position), no other connection should use the following statements: ALTER TABLE, DROP TABLE, RENAME TABLE, TRUNCATE TABLE, as consistent snapshot is not isolated from them. Option automatically turns off --lock-tables. --dump-date Put a dump date to the end of the output. (Defaults to on; use --skip-dump-date to disable.) --skip-mysql-schema Skip adding DROP DATABASE for mysql schema. --skip-opt Disable --opt. Disables --add-drop-table, --add-locks, --create-options, --quick, --extended-insert, --lock-tables, --set-charset, and --disable-keys. -S, --socket=name The socket file to use for connection. --secure-auth Refuse client connecting to server if it uses old (pre-4.1.1) protocol. Deprecated. Always TRUE --ssl-mode=name SSL connection mode. --ssl Deprecated. Use --ssl-mode instead. (Defaults to on; use --skip-ssl to disable.) --ssl-verify-server-cert Deprecated. Use --ssl-mode=VERIFY_IDENTITY instead. --ssl-ca=name CA file in PEM format. --ssl-capath=name CA directory. --ssl-cert=name X509 cert in PEM format. --ssl-cipher=name SSL cipher to use. --ssl-key=name X509 key in PEM format. --ssl-crl=name Certificate revocation list. --ssl-crlpath=name Certificate revocation list path. --tls-version=name TLS version to use, permitted values are: TLSv1, TLSv1.1, TLSv1.2 --server-public-key-path=name File path to the server public RSA key in PEM format. --get-server-public-key Get server public key -T, --tab=name Create tab-separated textfile for each table to given path. (Create .sql and .txt files.) NOTE: This only works if mysqldump is run on the same machine as the mysqld server. --tables Overrides option --databases (-B). --triggers Dump triggers for each dumped table. (Defaults to on; use --skip-triggers to disable.) --tz-utc SET TIME_ZONE=&#x27;+00:00&#x27; at top of dump to allow dumping of TIMESTAMP data when a server has data in different time zones or data is being moved between servers with different time zones. (Defaults to on; use --skip-tz-utc to disable.) -u, --user=name User for login if not current user. -v, --verbose Print info about the various stages. -V, --version Output version information and exit. -w, --where=name Dump only selected records. Quotes are mandatory. -X, --xml Dump a database as well formed XML. --plugin-dir=name Directory for client-side plugins. --default-auth=name Default authentication client-side plugin to use. --enable-cleartext-plugin Enable/disable the clear text authentication plugin.Variables (--variable-name=value)and boolean options &#123;FALSE|TRUE&#125; Value (after reading options)--------------------------------- ----------------------------------------all-databases FALSEall-tablespaces FALSEno-tablespaces FALSEadd-drop-database FALSEadd-drop-table TRUEadd-drop-trigger FALSEadd-locks TRUEallow-keywords FALSEapply-slave-statements FALSEbind-address (No default value)character-sets-dir (No default value)comments TRUEcompatible (No default value)compact FALSEcomplete-insert FALSEcompress FALSEcreate-options TRUEdatabases FALSEdefault-character-set utf8delete-master-logs FALSEdisable-keys TRUEdump-slave 0events FALSEextended-insert TRUEfields-terminated-by (No default value)fields-enclosed-by (No default value)fields-optionally-enclosed-by (No default value)fields-escaped-by (No default value)flush-logs FALSEflush-privileges FALSEforce FALSEhex-blob FALSEhost (No default value)ignore-error (No default value)include-master-host-port FALSEinsert-ignore FALSElines-terminated-by (No default value)lock-all-tables FALSElock-tables TRUElog-error (No default value)master-data 0max-allowed-packet 25165824net-buffer-length 1046528no-autocommit FALSEno-create-db FALSEno-create-info FALSEno-data FALSEorder-by-primary FALSEport 0quick TRUEquote-names TRUEreplace FALSEroutines FALSEset-charset TRUEsingle-transaction FALSEdump-date TRUEskip-mysql-schema FALSEsocket (No default value)secure-auth TRUEssl TRUEssl-verify-server-cert FALSEssl-ca (No default value)ssl-capath (No default value)ssl-cert (No default value)ssl-cipher (No default value)ssl-key (No default value)ssl-crl (No default value)ssl-crlpath (No default value)tls-version (No default value)server-public-key-path (No default value)get-server-public-key FALSEtab (No default value)triggers TRUEtz-utc TRUEuser (No default value)verbose FALSEwhere (No default value)plugin-dir (No default value)default-auth (No default value)enable-cleartext-plugin FALSE 总结本文介绍了使用mysqldump命令备份MySQL数据库的方法和步骤。mysqldump是MySQL的备份工具，可以备份整个MySQL数据库或者单个表。备份种类包括完全备份、增量备份、差异备份、压缩备份、远程备份、磁盘备份和文件备份。文章详细介绍了安装mysqldump、创建备份文件、执行备份命令、检查备份文件和恢复数据的步骤。备份完成后，可以查看备份文件的内容，并使用mysql命令恢复备份文件中的数据。文章最后总结了使用mysqldump备份和恢复MySQL数据库的基本教程。"},{"title":"Linux下命令find命令文件查找","path":"/2023/09/25/Linux下命令find命令文件查找/","content":"我自风情万种，何必与世相争；我自心清如水，又何须为烦恼所困？ @TOC 前言find命令是Linux系统中的一个常用命令，用于在指定的目录中查找符合条件的文件或目录。 一、find 命令使用介绍find 命令是 Linux 和 Unix 系统中常用的文件查找工具。它可以在指定目录及其子目录中查找符合指定条件的文件或目录，并将结果输出到终端。find 命令的语法如下： find [path] [expression] 其中： path：查找的起始目录，可以是绝对路径或相对路径。如果不指定 path，则默认从当前目录开始查找。 expression：用来指定查找的条件，可以是一些简单的逻辑运算符（如 \\-name, \\-type, \\-size, \\-mtime, \\-user, \\-group 等），也可以是一些复杂的文件名匹配模式（如通配符 \\*、?、\\[ \\] 等）。 \\-name：指定文件名模式，如 \\*.txt 表示查找所有以 .txt 结尾的文件。 \\-type：指定文件类型，如 \\-type f 表示查找所有文件，\\-type d 表示查找所有目录。 \\-size：指定文件大小范围，如 \\-size +10M 表示查找所有大小大于 10M 的文件。 \\-mtime：指定文件修改时间范围，如 \\-mtime -7 表示查找所有最近 7 天内修改过的文件。 \\-user：指定文件所有者，如 \\-user haoze表示查找所有所有者为 haoze 的文件。 \\-group：指定文件所属组，如 \\-group example 表示查找所有所属组为 example 的文件。 以下是一些示例： .代表的是相对路径当前目录，相对路径与绝对的路径的区别可以理解为在 Linux中凡是以&#x2F;开头的目录均为绝对路径 查找当前目录及其子目录中所有以 .txt 结尾的文件：1find . -name &quot;*.txt&quot; 查找当前目录及其子目录中所有文件大小大于 1M 的文件：1find . -type f -size +1M 查找当前目录及其子目录中所有修改时间在最近 7 天内的文件： 1find . -type f -mtime -7 查找当前目录及其子目录中所有所属组为 example 的文件： 1find . -group example 以上为 find 命令的基本用法，还有很多高级用法可以查阅官方文档了解。 二、Linux文件权限4位数含义 普通权限： image RWX对应的权限是： r:4 w:2 x:1， 所以777就代表 rwxrwxrwx 12345678910[root@server /]# ls -l | head -5total 32lrwxrwxrwx. 1 root root 7 Jul 2 14:51 bin -&gt; usr/bin#777权限dr-xr-xr-x. 5 root root 4096 Jul 2 14:53 boot#555权限drwxr-xr-x 20 root root 3240 Aug 9 16:08 dev#755权限drwxr-xr-x. 77 root root 8192 Aug 9 16:08 etc#755权限 高级权限 suid,sgid,sticky 0777最前面的0，代表高级权限suid,sgid,sticky分为属主权限、属组权限、其他人权限suid:0变为4、guid:0变为2、sticky:0变为1suid, sgid和sticky是Linux系统中用于限制文件和目录的用户和组的三种权限。 suid权限 suid权限是指文件或目录可以使其他用户以执行命令的方式来使用它们。当文件具有suid权限时，文件的所有者可以将文件或目录赋予其他用户，这些用户可以以root用户的身份来执行该文件或目录。 suid权限可以通过在文件上运行chmod +s命令来设置。例如，下面的命令将file.txt文件设置为具有suid权限： 123456[root@mysql5_7 ~]# ls -l file.txt-rw-r--r-- 1 root root 0 Aug 9 20:33 file.txt #初始权限[root@mysql5_7 ~]# chmod u+s file.txt[root@mysql5_7 ~]# ll file.txt-rwSr--r-- 1 root root 0 Aug 9 20:33 file.txt #可以看到多了个s权限 [root@mysql5_7 ~]# chmod u-s file.txt #取消权限 sgid权限 sgid权限是指文件或目录的所有者和组可以使用它们。如果没有写权限, 则这个目录下的所有文件都不能被删除, 同时也不能添加新的文件. 如果希望用户能够添加文件但同时不能删除文件 sgid权限可以通过在文件上运行chmod +s命令来设置。例如，下面的命令将file.txt文件设置为具有sgid权限： 1234[root@mysql5_7 ~]# chmod g+s file.txt[root@mysql5_7 ~]# ll file.txt-rw-r-Sr-- 1 root root 0 Aug 9 20:33 file.txt[root@mysql5_7 ~]# chmod g-s file.txt sticky权限 sticky权限是指只有文件或目录的拥有者和组用户才能进行写操作。当文件或目录具有sticky权限时，只有文件或目录的拥有者和组用户才能在文件或目录上进行写操作。其他用户可以读取和执行该文件或目录，但无法进行写操作。 设置该位后， 就算用户对目录具有写权限，也不能删除该文件。 sticky权限可以通过在文件上运行chmod +t命令来设置。例如，下面的命令将file.txt文件设置为具有sticky权限： 1234[root@mysql5_7 ~]# chmod o+t file.txt[root@mysql5_7 ~]# ll file.txt-rw-r--r-T 1 root root 0 Aug 9 20:33 file.txt[root@mysql5_7 ~]# chmod o-t file.txt 总结本文介绍了Linux系统中常用的find命令的使用介绍以及高级用法，同时解释了Linux文件权限4位数的含义，包括普通权限、高级权限suid、sgid和sticky，以及如何设置它们。find命令可以在指定目录及其子目录中查找符合指定条件的文件或目录，并将结果输出到终端。通过对命令语法和常用示例的介绍，可以更好地了解和运用find命令。","categories":["Linux","基础操作"]},{"title":"Linux 磁盘挂载","path":"/2023/09/25/Linux 磁盘挂载方式/","content":"人生自是有情痴，此恨不关风与月。 @[TOC](Linux 磁盘挂载) 一、Linux 磁盘自动挂载首先为虚拟机添加几块磁盘作为实验备用 在这里插入图片描述 添加磁盘后使用lsblk命令进行查看 [root@disk ~]# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 60G 0 disk ├─sda1 8:1 0 500M 0 part /boot └─sda2 8:2 0 59.5G 0 part ├─centos-root 253:0 0 38.6G 0 lvm / ├─centos-swap 253:1 0 2G 0 lvm [SWAP] └─centos-home 253:2 0 18.9G 0 lvm /home sr0 11:0 1 4G 0 rom [root@disk ~]# 可以看到磁盘未加载，使用万能的重启大法reboot,init 6,shutdown -r now等，重启虚拟机即可,重启完毕后可以看到新添加的硬盘已经加载好了 [root@disk ~]# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 60G 0 disk ├─sda1 8:1 0 500M 0 part /boot └─sda2 8:2 0 59.5G 0 part ├─centos-root 253:0 0 38.6G 0 lvm / ├─centos-swap 253:1 0 2G 0 lvm [SWAP] └─centos-home 253:2 0 18.9G 0 lvm /home sdb 8:16 0 60G 0 disk sdc 8:32 0 60G 0 disk sdd 8:48 0 60G 0 disk sr0 11:0 1 1024M 0 rom 使用 fdisk进行分区 [root@disk ~]# fdisk /dev/sdb Welcome to fdisk (util-linux 2.23.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Device does not contain a recognized partition table Building a new DOS disklabel with disk identifier 0x1d66e12e. Command (m for help): p Disk /dev/sdb: 64.4 GB, 64424509440 bytes, 125829120 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x1d66e12e Device Boot Start End Blocks Id System Command (m for help): n Partition type: p primary (0 primary, 0 extended, 4 free) e extended Select (default p): p Partition number (1-4, default 1): First sector (2048-125829119, default 2048): Using default value 2048 Last sector, +sectors or +size&#123;K,M,G&#125; (2048-125829119, default 125829119): Using default value 125829119 Partition 1 of type Linux and of size 60 GiB is set Command (m for help): p Disk /dev/sdb: 64.4 GB, 64424509440 bytes, 125829120 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x1d66e12e Device Boot Start End Blocks Id System /dev/sdb1 2048 125829119 62913536 83 Linux Command (m for help): w The partition table has been altered! Calling ioctl() to re-read partition table. Syncing disks. 根目录下创建了一个名为&#x2F;mnt&#x2F;sdb的目录，并对&#x2F;dev&#x2F;sdb1进行了ext4文件系统格式化。 文件系统类型：ext4 [root@disk ~]# mkdir /mnt/sdb [root@disk ~]# mkfs.ext4 /dev/sdb1 mke2fs 1.42.9 (28-Dec-2013) Filesystem label= OS type: Linux Block size=4096 (log=2) Fragment size=4096 (log=2) Stride=0 blocks, Stripe width=0 blocks 3932160 inodes, 15728384 blocks 786419 blocks (5.00%) reserved for the super user First data block=0 Maximum filesystem blocks=2164260864 480 block groups 32768 blocks per group, 32768 fragments per group 8192 inodes per group Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424 Allocating group tables: done Writing inode tables: done Creating journal (32768 blocks): done Writing superblocks and filesystem accounting information: done 配置&#x2F;etc&#x2F;fstab文件实现开机自动挂载 在配置文件/etc/fstab后追加/dev/sdb1 /mnt/sdb ext4 defaults 0 0 [root@disk ~]# vim /etc/fstab # # /etc/fstab # Created by anaconda on Sun Jul 2 14:40:36 2023 # # Accessible filesystems, by reference, are maintained under &#39;/dev/disk&#39; # See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info # /dev/mapper/centos-root / xfs defaults 0 0 UUID=8f90bf6f-fc6f-47e6-938e-d53602078619 /boot xfs defaults 0 0 /dev/mapper/centos-home /home xfs defaults 0 0 /dev/mapper/centos-swap swap swap defaults 0 0 /dev/sdb1 /mnt/sdb ext4 defaults 0 0 参数解释： 第1列:挂载设备 (1)/dev/sda5 (2)UUID=设备的uuid rhel6/7的默认写法 同一台机器内唯一的一个设备标识 第2列:挂载点 第3列:文件系统类型 第4列:文件系统属性 第5列:是否对文件系统进行磁带备份：0 不备份 第6列:是否检查文件系统：0 不检查 使用 mount 命令挂载 [root@disk ~]# mount /dev/sdb1 /mnt/sdb/ [root@disk ~]# mount -a #开机自动挂载 二、根目录扩容首先，使用lsblk命令查看当前系统的磁盘和分区情况。 [root@server /]# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 20G 0 disk ├─sda1 8:1 0 1G 0 part /boot └─sda2 8:2 0 19G 0 part ├─centos-root 253:0 0 17G 0 lvm / └─centos-swap 253:1 0 2G 0 lvm [SWAP] sdb 8:16 0 20G 0 disk ├─sdb1 8:17 0 5G 0 part /mnt/sdb1 ├─sdb2 8:18 0 5G 0 part /mnt/sdb2 ├─sdb3 8:19 0 5G 0 part /mnt/sdb3 ├─sdb4 8:20 0 1K 0 part └─sdb5 8:21 0 5G 0 part /mnt/sdb5 sdc 8:32 0 20G 0 disk └─sdc1 8:33 0 2G 0 part [SWAP] sdd 8:48 0 20G 0 disk sde 8:64 0 20G 0 disk └─vg2-lv2 253:2 0 26G 0 lvm /mnt/lv2 sdf 8:80 0 20G 0 disk └─vg1-lv1 253:3 0 1G 0 lvm sdg 8:96 0 20G 0 disk └─vg2-lv2 253:2 0 26G 0 lvm /mnt/lv2 sdh 8:112 0 20G 0 disk sr0 11:0 1 4.4G 0 rom 确认需要扩容的根分区所在的逻辑卷名称和卷组名称。根据示例中的输出，根分区的逻辑卷名称是centos-root，卷组名称是centos。 [root@server /]# lvs LV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convert root centos -wi-ao---- &lt;17.00g swap centos -wi-ao---- 2.00g lv1 vg1 -wi-a----- 1.00g lv2 vg2 -wi-ao---- 26.00g [root@server /]# pvcreate /dev/sdd Physical volume &quot;/dev/sdd&quot; successfully created. [root@server /]# vgextend centos /dev/sdd Volume group &quot;centos&quot; successfully extended 使用lvextend命令对逻辑卷进行扩容。例如，要将根分区扩容15GB，可以执行以下命令：lvextend -L +15G /dev/centos/root [root@server /]# vgs VG #PV #LV #SN Attr VSize VFree centos 2 2 0 wz--n- 38.99g &lt;20.00g vg1 1 1 0 wz--n- &lt;20.00g &lt;19.00g vg2 2 1 0 wz--n- 39.99g 13.99g [root@server /]# lvextend -L +15G /dev/centos/root Size of logical volume centos/root changed from &lt;17.00 GiB (4351 extents) to &lt;32.00 GiB (8191 extents). Logical volume centos/root successfully resized. 扩容完成后，使用df -Th命令检查根分区的大小是否已经扩容。 [root@server /]# df -Th Filesystem Type Size Used Avail Use% Mounted on devtmpfs devtmpfs 974M 0 974M 0% /dev tmpfs tmpfs 991M 0 991M 0% /dev/shm tmpfs tmpfs 991M 11M 980M 2% /run tmpfs tmpfs 991M 0 991M 0% /sys/fs/cgroup /dev/mapper/centos-root xfs 17G 5.7G 12G 34% / /dev/sdb3 ext4 4.8G 20M 4.6G 1% /mnt/sdb3 /dev/sdb1 ext4 4.8G 20M 4.6G 1% /mnt/sdb1 /dev/sdb2 ext4 4.8G 20M 4.6G 1% /mnt/sdb2 /dev/sdb5 ext4 4.8G 20M 4.6G 1% /mnt/sdb5 /dev/sda1 xfs 1014M 213M 802M 21% /boot tmpfs tmpfs 199M 12K 199M 1% /run/user/42 tmpfs tmpfs 199M 0 199M 0% /run/user/0 /dev/mapper/vg2-lv2 ext4 26G 45M 25G 1% /mnt/lv2 如果根分区是XFS文件系统，还需要执行xfs_growfs命令来调整文件系统大小。例如，执行以下命令：xfs_growfs /dev/centos/root [root@server /]# xfs_growfs /dev/centos/root meta-data=/dev/mapper/centos-root isize=512 agcount=4, agsize=1113856 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=0 spinodes=0 data = bsize=4096 blocks=4455424, imaxpct=25 = sunit=0 swidth=0 blks naming =version 2 bsize=4096 ascii-ci=0 ftype=1 log =internal bsize=4096 blocks=2560, version=2 = sectsz=512 sunit=0 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 data blocks changed from 4455424 to 8387584 使用df -Th命令再次检查根分区的大小，确保扩容操作已成功完成。 [root@server /]# df -Th Filesystem Type Size Used Avail Use% Mounted on devtmpfs devtmpfs 974M 0 974M 0% /dev tmpfs tmpfs 991M 0 991M 0% /dev/shm tmpfs tmpfs 991M 11M 980M 2% /run tmpfs tmpfs 991M 0 991M 0% /sys/fs/cgroup /dev/mapper/centos-root xfs 32G 5.7G 27G 18% / /dev/sdb3 ext4 4.8G 20M 4.6G 1% /mnt/sdb3 /dev/sdb1 ext4 4.8G 20M 4.6G 1% /mnt/sdb1 /dev/sdb2 ext4 4.8G 20M 4.6G 1% /mnt/sdb2 /dev/sdb5 ext4 4.8G 20M 4.6G 1% /mnt/sdb5 /dev/sda1 xfs 1014M 213M 802M 21% /boot tmpfs tmpfs 199M 12K 199M 1% /run/user/42 tmpfs tmpfs 199M 0 199M 0% /run/user/0 /dev/mapper/vg2-lv2 ext4 26G 45M 25G 1% /mnt/lv2 三、添加交换分区使用dd工具将/dev/zero设备中的内容写入到/mnt/swap.iso文件中，写入的块大小为1GB，总共写入1个块。 这个命令的目的是创建一个1GB大小的名为swap.iso的文件，并将其写入到/mnt目录下。/dev/zero是一个特殊的文件，读取它会返回无限的空字节。通过将其内容写入到文件中，相当于创建了一个全是0的文件。 [root@disk ~]# dd if=/dev/zero of=/mnt/swap.iso bs=1G count=1 1+0 records in 1+0 records out 1073741824 bytes (1.1 GB) copied, 12.4315 s, 86.4 MB/s 通常情况下，这样的操作是为了创建一个临时的交换文件（swap file），用于作为交换分区（swap partition）的替代品，用于虚拟内存的扩展。 [root@disk ~]# mkswap /mnt/swap.iso Setting up swapspace version 1, size = 1048572 KiB no label, UUID=084d2529-f7ac-49c1-9d07-2ad6da7410df [root@disk ~]# vim /etc/fstab /mnt/swap.iso swap swap defaults 0 0 [root@disk ~]# swapon -a swapon: /mnt/swap.iso: insecure permissions 0644, 0600 suggested. #这个警告是由于你的交换文件（swap file）的权限设置被认为不安全导致的。默认情况下，建议将交换文件设置为 0600 权限。 要更改交换文件的权限，你可以使用以下命令： [root@disk ~]# chmod 0600 /mnt/swap.iso #这将设置交换文件的权限为 0600，只允许所有者读取和写入，而禁止其他用户的访问。这样设置后，再次运行 swapon 命令应该就不会再出现不安全权限的警告了 [root@disk ~]# swapon -a [root@disk ~]# swapon -s Filename Type Size Used Priority /dev/dm-1 partition 2097148 0 -2 /mnt/swap.iso file 1048572 0 -3 [root@disk ~]# 到此挂载完成，在实际使用中使用交换分区，最好使用专门的分区，而不是一个文件。 总结本文介绍了Linux磁盘挂载的基本操作和配置方法，包括虚拟机添加磁盘、分区格式化、配置fstab文件、开机自动挂载，根目录扩容和添加交换分区等。文章详细介绍了每个步骤的具体操作和注意事项。","categories":["Linux","基础操作"]},{"title":"Linux中/etc/issue、/etc/motd文件","path":"/2023/09/25/Linux中motd文件/","content":"@TOC 前言在Linux操作系统中，/etc/issue和/etc/motd文件都是系统管理员可以使用来显示系统信息和欢迎信息的关键文件。这些文件通常位于&#x2F;etc目录中，是用户在登录时第一个看到的内容。&#x2F;etc&#x2F;issue文件提供了一些基本的系统信息，例如操作系统名称、版本号、内核版本等。而&#x2F;etc&#x2F;motd文件则通常包含了一些系统管理员可以添加的欢迎信息、系统安全提示或者重要公告等。这些文件对于系统的安全性、稳定性和可用性都有很大的影响，因此系统管理员需要对它们进行适当的配置和维护。 登录前欢迎语&#x2F;etc&#x2F;issue文件用来显示Linux系统的基本信息，例如发行版本、内核版本、安装日期等。当用户登录到Linux系统时，该文件将被用来显示欢迎信息。 实验 [root@mysql5_7 ~]# vim /etc/issue \\S Kernel \\r on an \\m \\d &lt;Welcome to Mysql.server&gt; :wq #保存退出 测试，这个需要系统登录看，用远程工具看不到 image 以下是&#x2F;etc&#x2F;issue文件的一些常见选项说明： 12345678910111213141516171819 ：换行符，用于在欢迎信息中添加新行。\\l：显示本地终端设备名称。\\m：显示计算机的硬件架构。\\s：显示操作系统的名称。\\r：显示内核的版本号。\\t：显示当前时间。\\u：显示当前用户名。\\v：显示操作系统的发行版本号。\\\\：显示反斜杠字符。其他自定义文本：可以在文件中添加其他自定义文本或标记。 使用这些选项，你可以根据需要定制并个性化系统登录时的欢迎信息。例如，可以使用\\s和\\v选项来显示操作系统的名称和发行版本号，\\l选项来显示本地终端设备名称，以及\\t选项来显示当前时间等。 登录后欢迎语&#x2F;etc&#x2F;motd文件用来显示Linux系统的欢迎信息。当用户第一次登录到Linux系统时，该文件将被用来显示欢迎信息。 实验 [root@mysql5_7 ~]# vim /etc/motd &quot;Welcome to MySql.server &quot; :wq #保存退出 测试，可以看到成功了 image 总结这篇文章讨论了Linux系统中&#x2F;etc&#x2F;issue和&#x2F;etc&#x2F;motd文件的作用。&#x2F;etc&#x2F;issue文件用来显示Linux系统的基本信息，例如发行版本、内核版本和安装日期等，在用户登录前会显示欢迎信息。&#x2F;etc&#x2F;motd文件则用来显示Linux系统的欢迎信息，在用户第一次登录后会显示该文件中的内容。","categories":["Linux","基础操作"]},{"title":"Linux文件权限策略setfacl命令","path":"/2023/09/25/Linux文件权限策略setfacl命令/","content":"“春风得意马蹄疾，一日看尽长安花。” ——《登高》 杜甫 @toc 前言Linux的文件权限策略使用setfacl命令来管理的。setfacl命令允许用户在文件和目录上添加、删除和修改权限。它可以根据用户、组、用户组和其他条件来定义文件和目录的权限。 命令语法setfacl命令的语法如下： 1[root@mysql5_7 ~]# setfacl -m user:username permissions file/directory 其中，-m选项用于添加或修改权限，user:username表示要授予权限的用户名，permissions表示要授予或修改的权限。 例如，如果要授予用户 test读、写和执行权限，可以使用以下命令： 1setfacl -m user:test:rwx file.txt 要列出当前文件和目录的所有权限，可以使用 getfacl 命令： 1234567[root@mysql5_7 ~]# getfacl file.txt# file: file.txt# owner: root# group: rootuser::rw-group::r--other::r-- 这将列出file.txt文件的所有权限，并将它们打印到终端上。 操作案例创建了一个名为test的用户。 1[root@mysql5_7 ~]# useradd test 使用getfacl命令查看file.txt文件的ACL权限。 1234567[root@mysql5_7 ~]# getfacl file.txt# file: file.txt# owner: root# group: rootuser::rw-group::r--other::r-- 使用setfacl命令将test用户添加到file.txt文件的ACL权限中，并赋予读写权限。 1[root@mysql5_7 ~]# setfacl -m user:test:rw file.txt 使用echo命令并通过管道方式将密码”123456”传递给passwd命令，将test用户的密码更改为”123456”。 123[root@mysql5_7 ~]# echo &quot;123456&quot; | passwd --stdin testChanging password for user test.passwd: all authentication tokens updated successfully. 使用ls -l命令查看file.txt文件的详细权限信息。 12[root@mysql5_7 ~]# ls -l file.txt-rw-rw-r--+ 1 root root 0 Aug 9 20:33 file.txt 使用chmod命令将file.txt文件的权限修改为只有root用户有访问权限。 12[root@mysql5_7 ~]# chmod 000 file.txt 使用ls -l命令再次查看file.txt文件的详细权限信息。 12[root@mysql5_7 ~]# ls -l file.txt----------+ 1 root root 0 Aug 9 20:33 file.txt 使用su命令切换到test用户。 123[root@mysql5_7 ~]# su test[test@mysql5_7 root]$ lsls: cannot open directory .: Permission denied 尝试使用ls命令查看根目录下的文件，但因权限不足而失败。 使用usermod命令将test用户添加到wheel组（提权）。 1[root@mysql5_7 /]# usermod test -G wheel 使用echo命令将”1234567”写入file.txt文件。 1[test@mysql5_7 /]$ echo &quot;1234567&quot; &gt; file.txt 使用cat命令查看file.txt文件的内容。 12[test@mysql5_7 /]$ cat file.txt1234567 创建了一个名为test2的用户。 1234[root@mysql5_7 /]# useradd test2[root@mysql5_7 /]# echo &quot;123456&quot; | passwd --stdin test2Changing password for user test2.passwd: all authentication tokens updated successfully. 使用ls -l命令查看file.txt文件的详细权限信息，发现已经对其他用户进行了限制。 12345678[test2@mysql5_7 /]$ ls -l file.txt----rwx---+ 1 root root 8 Aug 11 23:41 file.txt[test2@mysql5_7 /]$ vim file.txt[test2@mysql5_7 /]$ cat file.txtcat: file.txt: Permission denied[test2@mysql5_7 /]$ echo &quot;12334&quot; &gt; file.txtbash: file.txt: Permission denied[test2@mysql5_7 /]$ 使用vim命令尝试编辑file.txt文件，但因权限不足而失败。 使用cat命令尝试查看file.txt文件的内容，但因权限不足而失败。 使用echo命令尝试向file.txt文件写入内容，但因权限不足而失败 删除 test 用户，策略也会相应地被删除 123456789101112[root@mysql5_7 /]# userdel -r test[root@mysql5_7 /]# getfacl file.txt# file: file.txt# owner: root# group: rootuser::---user:1000:rwxgroup::r--mask::rwxother::---# 可以看到用户策略消失了 要删除所有权限，可以使用以下命令： 1setfacl -u username:username file.txt 其中，-u选项用于删除权限。 除了-m选项之外，setfacl命令还可以使用其他选项来指定其他权限和条件。有关setfacl命令的完整语法和选项 123456789101112131415161718192021[root@mysql5_7 ~]# setfacl --helpsetfacl 2.2.51 -- set file access control listsUsage: setfacl [-bkndRLP] &#123; -m|-M|-x|-X ... &#125; file ... -m, --modify=acl modify the current ACL(s) of file(s) -M, --modify-file=file read ACL entries to modify from file -x, --remove=acl remove entries from the ACL(s) of file(s) -X, --remove-file=file read ACL entries to remove from file -b, --remove-all remove all extended ACL entries -k, --remove-default remove the default ACL --set=acl set the ACL of file(s), replacing the current ACL --set-file=file read ACL entries to set from file --mask do recalculate the effective rights mask -n, --no-mask don&#x27;t recalculate the effective rights mask -d, --default operations apply to the default ACL -R, --recursive recurse into subdirectories -L, --logical logical walk, follow symbolic links -P, --physical physical walk, do not follow symbolic links --restore=file restore ACLs (inverse of `getfacl -R&#x27;) --test test mode (ACLs are not modified) -v, --version print version and exit -h, --help this help text 总结本文介绍了Linux中使用setfacl命令来管理文件和目录的权限策略。setfacl命令允许用户添加、删除和修改文件和目录的权限，并根据用户、组、用户组和其他条件来定义权限。文章给出了setfacl命令的语法和示例，以及如何使用getfacl命令列出当前文件和目录的所有权限，并使用setfacl -u username:username命令删除所有权限。此外，文章还提到了setfacl命令的其他选项和完整语法。要了解更多相关信息，请参阅Linux文档或相关文档。","categories":["Linux","基础操作"]},{"title":"sysctl","path":"/2023/09/25/sysctl/sysctl/","content":"可以通过&#x2F;etc&#x2F;sysctl.conf控制和配置Linux内核及网络设置。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354# 避免放大攻击net.ipv4.icmp_echo_ignore_broadcasts = 1# 开启恶意icmp错误消息保护net.ipv4.icmp_ignore_bogus_error_responses = 1# 开启SYN洪水攻击保护net.ipv4.tcp_syncookies = 1# 开启并记录欺骗，源路由和重定向包net.ipv4.conf.all.log_martians = 1net.ipv4.conf.default.log_martians = 1# 处理无源路由的包net.ipv4.conf.all.accept_source_route = 0net.ipv4.conf.default.accept_source_route = 0# 开启反向路径过滤net.ipv4.conf.all.rp_filter = 1net.ipv4.conf.default.rp_filter = 1# 确保无人能修改路由表net.ipv4.conf.all.accept_redirects = 0net.ipv4.conf.default.accept_redirects = 0net.ipv4.conf.all.secure_redirects = 0net.ipv4.conf.default.secure_redirects = 0# 不充当路由器net.ipv4.ip_forward = 0net.ipv4.conf.all.send_redirects = 0net.ipv4.conf.default.send_redirects = 0# 开启execshildkernel.exec-shield = 1kernel.randomize_va_space = 1# IPv6设置net.ipv6.conf.default.router_solicitations = 0net.ipv6.conf.default.accept_ra_rtr_pref = 0net.ipv6.conf.default.accept_ra_pinfo = 0net.ipv6.conf.default.accept_ra_defrtr = 0net.ipv6.conf.default.autoconf = 0net.ipv6.conf.default.dad_transmits = 0net.ipv6.conf.default.max_addresses = 1# 优化LB使用的端口# 增加系统文件描述符限制fs.file-max = 65535# 允许更多的PIDs (减少滚动翻转问题); may break some programs 32768kernel.pid_max = 65536# 增加系统IP端口限制net.ipv4.ip_local_port_range = 2000 65000# 增加TCP最大缓冲区大小net.ipv4.tcp_rmem = 4096 87380 8388608net.ipv4.tcp_wmem = 4096 87380 8388608# 增加Linux自动调整TCP缓冲区限制# 最小，默认和最大可使用的字节数# 最大值不低于4MB，如果你使用非常高的BDP路径可以设置得更高# Tcp窗口等net.core.rmem_max = 8388608net.core.wmem_max = 8388608net.core.netdev_max_backlog = 5000net.ipv4.tcp_window_scaling = 1","categories":["Linux","基础操作"]},{"title":"日常","path":"/more/index.html","content":"第一步：打开 GitHub打开 Stellar 的 GitHub 页面。第二步：点击 Star如果发现右上角的 Star 还没点亮，就点亮它！"},{"title":"公众号原点独白","path":"/wiki/stellar/index.html","content":"原点独白是我从2020年开始运营的账号。 转眼间，它就要4岁啦，然后悄悄告诉你们，聊天界面发消息我都可以看的见，快来和我一起聊聊天呗～ 如果你喜欢原点独白的话，希望能把它分享给你的朋友们。 有你们的帮助和支持，原点独白才会走得更远。 期待能够在这里认识更多新面孔。"}]