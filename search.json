[{"title":"云计算笔试面试题库-所有","path":"/2023/09/26/云计算笔试面试题库-所有/","content":"云计算笔试面试题库 1、在linux中links分类？软、硬连接 2、编写shell程序运行前赋予该脚本什么权限？x 执行权限 3、唯一标识每个用户得是？uid和用户名 4、在linux系统中， 用来存放系统所需要的配置文件和子目录的目录是/etc 5、结束后台进程命令？kill 6、在超级用户下显示linux 系统中正在运行的全部进程，应使用的命令及参数？ps -ef 7、为脚本程序指定执行权限的命令和参数是？chmod +x 脚本 8、什么命令是删除文件和目录？rm 9、什么命令是移动文件和目录的命令？mv 10、增加一个用户得命令是？useradd 11、终止一个前台进程可能用到的命令和操作(A) A. kill B. +c C. shut down D. halt 12、在使用mkdir 命令创建新的目录时候，在其父目录不存在时 先创建父目录的选项是 (D) A. -m B. -d C&#x2F; -f D. -p 13、一个文件名字为test.tar.gz, 可以用来解压缩的命令是：（A） A. tar B. gzip C. compress D. uncompress 14、若一台计算机的内存为 128MB 则交换分区的大小通常是 (A)A 64MB B 128MB C 256MB D 512MB 15、将光盘CD-ROM(hdc) 挂在到文件系统的&#x2F;mnt&#x2F;cdrom 目录下的命令是 (C)A. mount &#x2F;mnt&#x2F;cdrom B. mount &#x2F;mnt&#x2F;cdrom &#x2F;dev&#x2F;hdc C. mount &#x2F;dev&#x2F;hdc &#x2F;mnt&#x2F;cdrom D. mount &#x2F;dev&#x2F;hdc 16、有关归档和压缩命令，下面描述正确的是（B）A. 用 uncompress 命令解压缩由 compress 命令生成的后缀为.zip的压缩文件 B. unzip 命令和 gzip 命令 可以压缩相同类型的文件 C. tar 归档且压缩的文件可以由 Gzip命令压缩 D. tar 命令归档后的文件也是一种压缩文件 17、下列对shell 变量 FRUIT 操作，正确的是：(B)A. 为变量赋值： $FRUIT&#x3D;apple B. 显示变量的值： fruit&#x3D;apple C. 显示变量的值： echo $FRUIT D. 判断变量是否有值：[ -f ‘$FRUIT’] 18、描述raid0、1、5的特点和优点?raid0: 最少需要两块磁盘 数据条带式分布 没有冗余，性能最佳(不存储镜像、校验信息) 不能应用于对数据安全性要求高的场合 raid1: 最少需要2块磁盘 提供数据块冗余 性能好 raid5: 最少3块磁盘 数据条带形式分布 以奇偶校验作冗余 适合多读少写的情景，是性能与数据冗余最佳的折中方案 19、在&#x2F;etc&#x2F;fstab 文件中指定的文件系统加较参数中，(D) 参数般用于CD ROMA defaults B Sw C rw和ro D noauto 20、Linux 文件权限一共10位长度， 分成四段，第三段表示的内容是(C) A 文件类型 B 文件所有者的权限 C 文件所有者所在组的权限 D 其他用户 21、在使用mkdir命令创建新的目录时，在其父目录不存在时先创建父目录的选项(D) A. -m B. -d C. -f D. -p 22、1、如何判断出Windows操作系统是32位的还是64位的。 可以在我的电脑属性中查看 2、当前市场中有几种主流的浏览器? (至少列举出3种)。 firefox chrome opera 3、Windows 操作系统设置每天下午18 点自动关机，如何操作。 控制面板-》管理工具-》计划任务-》设置每天的关机时间 4、请写出Linux系统关机命令、重启命令、文件夹赋权命令 poweroff reboot chmod 5、请写出linux 系统挂载分区命令 mount 6、请写出linux系统查看定时任务命令 crontab -l 23、在Windows操作系统和linux系统中如何查看MAC地址。windows 网卡-&gt;状态-&gt;支持-&gt;详细信息 linux ip a 24、linux操作系统新建一个用户为oracle命令是码的命令为（）为oracle 用户设置密码（）useradd oracle -s &#x2F;sbin&#x2F;nologin echo ‘password’ | passwd –stdin oracle 25、Linux 操作系统创建&#x2F;datal&#x2F;database&#x2F;oracle (注: &#x2F;data目承不存在)目录的命令为_;进入&#x2F;datal&#x2F;database&#x2F;oracle目录的命令为_；mkdir -pv &#x2F;datal&#x2F;database&#x2F;oracle cd &#x2F;datal&#x2F;database&#x2F;oracle 26、Linux 操作系统从ip为10.0.4.100远程主机复制&#x2F;root&#x2F;script.sh文件到&#x2F;database&#x2F;oracle的命令为scp 10.0.4.100:&#x2F;root&#x2F;script.sh &#x2F;database&#x2F;oracle 27、请写出在Linux操作系统中查看进程中含有oracle关键字的进程信息的命令(); 杀死PID为29231的进程的命令为()ps aux |grep oracle kill -9 29231 28、请写出查看Linux操作系统的磁盘空间装载以及占用情况的命令();请写出将&#x2F;dev&#x2F;sdb文件系统挂载到&#x2F;data2目录下的命令为df -Th mount &#x2F;dev&#x2F;sdb &#x2F;data2 29、写出输出数字0到100中3的倍数(0 3 6 9…) 的命令?for i in &#123;1..100&#125; do if [[ $(($i % 3)) -eq 0 ]];then echo $i fi done 30、假设服务器具有6块900G本地磁盘，单块磁盘io约为150M&#x2F;S, 现对磁盘进行RAID划分，6块磁盘做成RAID5级别后实际存储大小、理论实际io为多少。理论上6块硬盘做raid5 ;其中有一块盘做冗余；因为有校验位；所以 实际大小是 900 * （6-2）&#x3D; 4000G 实际IO 是: 间 ）*4&#x3D;600m&#x2F;s 写的速率150m&#x2F;s （小于 。 理论上写 过程中，RAID5会进行校验耗费时 因为读取数据的时候校验位的盘是需要读取的所以实际： 读的速率是（6-1）*150 &#x3D;750m&#x2F;s 31、英语Many of our components require the use of JavaScript to function.Specifically, they require jQuery, Popper.js, and our own JavaScript plugins. Place the following s near the end of your pages, right before the closing tag, to enable them. jQuery must come first,then Popper.js, and then our JavaScript plugins. 请将_上述英语翻译为中文。 我们的许多组件都需要使用JavaScript来运行。 具体来说，它们需要jQuery、Popper.js和我们自己的JavaScript插件。将下面的s放在页面的末尾，右侧 在关闭标记之前，启用它们。jQuery必须排在第一位， 然后是Popper.js，然后是我们的JavaScript插件。 32、常见协议http. https. ftp. mysql. redis默认端口号。80 443 21 3306 6379 33、根据服务器硬件配置，安装Linux操做系统时如何分区?(硬件配置1:硬盘2T. 内存32G)、(便件配置2:硬盘6T. 内在128G) 1: boot 50m swap 64G / 500G /home 1T /var 剩余 2: boot 50m swap 256G / 1T /home 4.5G /var 剩余 34、 Linux系统统计服务器服务连接数命令?w 35、简述Linux下各个命令或工具的主要功能作用:(grep/netstat/sed/awk/sort/wc/tcpdump/tail/ldd/uniq) grep 过滤 netstat 检测网络和端口 sed 流文本编辑工具 awk 字符处理工具 sort 排序 wc 统计 tcpdump 抓包 tail 从末尾查看 ldd 列出程序所需要的动态链接库 uniq 检查重复行 36、Linux查询某文件的路径,指令为? find 37、raid的类型有?raid0 raid1 raid5 raid10 38、Linux默认的定时任务,一般写入/etc/下的哪个文件?/etc/crontab 39、常见协议(http,https,ftp,mysql,Redis)默认端口号80 443 21 3306 6379 40、Linux系统统计服务器服务连接数命令?netstat -an|awk &#39;/tcp/ &#123;print $6&#125;&#39;|sort|uniq -c 41、http的错误代码含义(404,410, 502, 504).404 找不到页面 410 被请求的资源在服务器上已经不再可用 502 网关错误 504 网关超时 42、请使用awk,sed,grep三个命令,举例写出命令语句awk -F':' '{print $1}' filename sed -i.bak 's/a/A/' filename grep 'hello world' filename 43、简述tcp三次握手的过程在TCP/IP协议中,TCP协议提供可靠的连接服务,采用三次握手建立一个连接. 第一次握手：建立连接时,客户端发送syn包(syn=j)到服务器,并进入SYN_SEND状态,等待服务器确认； SYN：同步序列编号(Synchronize Sequence Numbers) 第二次握手：服务器收到syn包,必须确认客户的SYN（ack=j+1）,同时自己也发送一个SYN包（syn=k）,即 SYN+ACK包,此时服务器进入SYN_RECV状态； 第三次握手：客户端收到服务器的SYN＋ACK包,向服务器发送确认包ACK(ack=k+1),此包发送完毕,客户端和 服务器进入ESTABLISHED状态,完成三次握手. 完成三次握手,客户端与服务器开始传送数据 44、简述二层交换机和三层交换机的区别二层交换机工作于OSI模型的第2层(数据链路层)，故而称为二层交换机。 三层交换机的最重要目的是加快大型局域网内部的数据交换，所具有的路由功能也是为这目的服务的，能够做到一次路由，多次转发。对于数据包转发等规律性的过程由硬件高速实现，而像路由信息更新、路由表维护、 路由计算、路由确定等功能，由软件实现。三层交换技术就是二层交换技术+三层转发技术。 45、centos7默认防火墙允许80端口外网访问,写出相应安全策略firewall-cmd --zone=public --add-port=80/tcp --permanent 46、使用tcpdump监听tcp80端口来自192.168.0.1的所有流量,请写出命令.tcpdump –i eth0 host 192.168.0.1 port 80tcpdump src 192.168.1.10 tcp port 80 47、符号链接与硬链接的区别1、硬链接 和 源文件 是同一个文件；软链接 和 源文件 是2个不同的文件。 2、大部分系统不能创建 目录 的硬链接,软链接没有这个限制。 3、硬链接不能跨文件系统(分区),软链接没有这个限制。 48、磁盘空间满了，删除一部分Nginxaccess日志，但是，发现磁盘空间还是满的，为什么？在Linux系统中，通过rm或者文件管理器删除文件将会从文件系统的目录结构上解除链接(unlink).然而如果 文件是被打开的（有一个进程正在使用），那么进程将仍然可以读取该文件，磁盘空间也一直被占用。而我删 除的是nginx的log文件删除的时候文件应该正在被使用 解决：查看进程，kill掉进程，然后再删除 49、进程查看和调度分别使用什么命令？进程查看的命令是ps和top。 进程调度的命令有at，crontab，kill 50、服务器A需要连接服务器B的端口8080，目前登录了的8080端口是否健康运行，可以使用linux命令（）netstat -ntpl |grep 8080 ss -anpt|grep 8080 51、快速定位当前目录下size最大的文件，命令行为（）du -sk *|sort -rn|head -1|awk '{print $2}' 52、快速定位catalina.out 日志中最近发生的依稀异常，关键（）cat catalina.out|grep error 53、系统中有一台数据库服务器，发现木马，症状是不定期向外网发包，影响服务器性能现登录该服务器，如何快速找到该木马进程？请写出命令行，并解释原因。1、查看异常用户 cat /etc/passwd 2、查看异常进程 ps 3、查看异常定时任务 crontab -e 删除异常定时任务 54、/code/java 目录下有一份java工程，里面有一系列各种深度的子目录，其中有一个中包含HellWord这个字符，现需要通过一行命令找到改文件，请写下命令行。 find /code/java -name HellWord 55、新增一个禁止登录的用户useradd -s /sbin/nologin 56、.如何安装软件1、使用系统自带yum命令安装 2、下载rpm包，用rpm -ivh命令安装 3、下载二进制包，二进制方式安装 57、.如何查看系统都开启了哪些端口ss -anpt 或 netstat lsof 58、如何查看当前系统都有哪些进程ps 或 top lsof 59、获取tomcatpid 并杀掉进程ps aux|grep tomcat 获取进程id kill -9 进程id 或 pkill -9 tomcat 60、.如何查看命令的具体使用方法命令 --help eg : ps --help 或者 man 命令 eg： man ps 61、使用rsync同步/var/log目录下的多个文件到test的log模块下，并记录logrsync -avz user@ip:/var/log /test/log 62、下列服务的默认端口https ftp mysql pop3 smtp redis 443 21/22 3306 110 25 6379 63、使用find命令删除/data/web下的所有.svn的文件find /data/web *.svn -exec rm -rf {} ; 65.使用sed将文件file.txt中test替换为abc.com写出命令sed -i 's/tsst/abc.com/g' 67、解释下列含义：*/2 10 1 6 1 /sur/sbin/ntpdata ntp.api.bz 6月1号是周一的时候10点每隔两分钟 像ntp.api.bz 同步一次时间 68、.使用iptables拒绝8.8.8.8访问本机的53端口iptables -I INPUT -s 8.8.8.8 -ptcp --dport 53 -j DROP 69、写出linux系统开机的启动顺序加载BIOS 读取MBR Boot Loader 加载内核 用户层init依据inittab文件来设定运行等级 init进程执 行rc.sysinit 启动内核模块 执行不同运行级别的脚本程序 －执行/etc/rc.d/rc.local －执 行/bin/login程序，进入登录状态 70、写一个脚本查找最后创建时间是3天前，后缀是*.log的文件并删除。find / *.log -mtime +5 -exec rm -rf {} ; 71、被植入代码有哪些特点，怎样快速找到被植入的木马可能定时执行，破坏系统文件 如何快速找到： 查看系统日志 查看系统用户 查看进程是否有异常进程 查看定时任务是有异常 72、inux应该从哪些方面提高安全性1、 取消不必要的服务 2、加密用户登录密码并设定用户账号安全等级 3、 增强安全防护工具 73、由于磁盘空间紧张，如果找出那些文件占用了大量的磁盘空间？如何实现每周一下午三点讲/tmp/logs目录下后缀为*.log的所有文件打包成‘年月日-log-back.tar.gz’,并rsync同步到备份服务器 192.168.1.100中同样的目录下面？ 1、du -sh *|awk '{print $1}' |sort -r 2、crontab -e 0.3.*.*.1 tar -czf /tmp/log/*.log `date +%Y-%m-%d`-log-back.tar.gz & rsync -avzP /tmp/logs/*.log &#114;&#111;&#x6f;&#116;&#x40;&#x31;&#57;&#x32;&#x2e;&#49;&#54;&#56;&#x2e;&#x31;&#46;&#49;&#48;&#48;:/tmp/logs 74、utf-8和Unicode的区别是什么？Unicode 是「字符集」,Unicode为世界上所有字符都分配个唯一的数字编号 UTF-8 是「编码规则」, 75、linux操作系统支持的文件系统类型是？ext3 ext4 xfs 76、创建一个每周三1:00---4:00每三分钟执行一次的crontab指令。crontab -e 3/* 1-3 * * 3 执行命令 77、hp_unix 删除文件名中含有2017 关键字的文件？rm -rf *2017 mv *2017 rm -rf * 2017 * 78、配置zookeeper节点（列入：server.1=llhadoop009:9502:9503),需要修改的配置文件是： zoo.cfgzoo.cfg myid hosts 79、进行字符串查找，使用什么命令?grep 80、Squi有什么用？Squid是一个高性能的代理缓存服务器,可以加快内部网浏览互联网的速度,提高客户机的访问命中率.Squid 不仅仅支持HTTP协议,还支持FTP,gopher,SSL和WAIS等协议,还可以做代理服务器，降低服务器负载。 81、inux系统的主流文件系统类型是什么？ext4 xfs 82、安装linux系统时，swap分区应该设置多少？物理内存在8G以下，则swap设置为与物理内存一样大,也可以设置为物理内存的2倍。如果物理内存在8G以 上，swap空间设置为8G即可。 83、在/etc/fatab文件中指定的文件系统加载参数块，什么参数一般用于CD-ROM等移动设备noauto 84、linux文件权限一共10位长度，分为4段，第三段表示的内容是？其他用户的权限 85、在使用mkdir命令创建新的目录时，在其父目录不存在时先创建父目录的选项是 mkdir -p 86、一个文件名字为rr.Z可以用来解压的命令是？ uncompress 87、发现一个病毒文件你删除了他又自动创建怎么解决？ 查看进程是否异常，查看计划任务crontab 是否有异常 88、你对现在运维工程师的理解和以及对其工作的认识运维工程师需要保障公司系统服务的正常运行，需要配和其他部门例如研发部门的发布工作，需要给公司进行系统搭建等等 89、对于一个web服务器来说，应该调整那些linux内核参数。并说明他们的含义。net.ipv4.tcp_syncookies = 1 #表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为 0，表示关闭； net.ipv4.tcp_tw_reuse = 1 #表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭； net.ipv4.tcp_tw_recycle = 1 #表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。 net.ipv4.tcp_fin_timeout = 30 #表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。 net.ipv4.tcp_keepalive_time = 1200 #表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟。 net.ipv4.ip_local_port_range = 1024 65000 #表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为1024到65000。 net.ipv4.tcp_max_tw_buckets = 5000 #表示系统同时保持TIME_WAIT套接字的最大数量，如果超过这个数字， #TIME_WAIT套接字将立刻被清除并打印警告信息。默认为180000，改为5000。 90、一般可以使用什么软件远程linux服务器？通过什么上传和下载文件？crt x-shell finalshell xftp lrzsz 91、如何临时、永久关闭linux防火墙？systemctl stop firewalld (重启失效) systemctl disable firewalld(永久关闭) 92、将普通用户user加入到root组gpasswd -a user root usermod -g root user 93、使用rpm命令安装、卸载ntp-0.7.12.x86_64.rpm这个包。rpm -ivh ntp-0.7.12.x86_64.rpm rpm -e ntp-0.7.12.x86_64.rpm 94、linux系统中如何获取pid为1000的进程所监听的tcp端口，请写出详细命令？ss -anpt|grep 1000|awk '{print $4}'|awk -F\":\" '{print $2}' 95、修改oracle环境变量/etc/profile文件并使之生效的命令。vi /etc/profile 定义oracle 环境变量 source /etc/profile 96、下列服务默认端口是多少：ssh 22 mysql 3306 sqlserver 1433 httpd 80 dns 53 97、说出你知道的linux/unix发行版本Redhat、CentOS、Fedora、SuSE、Debian、Ubuntu 98、如何退出vim编辑器:q :q! :wq （保存推出） 99、linux系统中结束后台进程的命令通过ps命令查看进程号PID，然后执行 kill %PID 通过jobs命令查看jobnum，然后执行 kill %jobnum 100、在linux中压缩文件后生成后缀为.gz文件的命令是？tar -czf 文件.tar.gz 文件 101、什么命令可以移动文件和目录，还可以为文件和目录重命名。mv 102、linux系统在今晚23:00关机shutdown -h 23 :00 103、搜素文件命令：find 路径 -name 文件名 104、创建目录gpowe命令mkdir gpowe 105、删除目录gpowe命令rm -rf gpowe 106、当安装linux操作系统时一般选择那种操作？1.“图形登录方式”，设定系统开始运行级别为4 2.“文本登录方式”，设定系统开始运行级别为3 3.“文本登录方式”，设定系统开始运行级别为5 4.“图形登录方式”，设定系统开始运行级别为3 107、.linux通过VFS支持多种不同的文件系统。linux缺省的文件系统是 31.VFAT 2.ISO9660 3.EXT系制 4.NTFS 108、在vi编辑器中的命令模式下，键入（）可在光标当前所在行下添加一新行。o 109.使用什么命令可以关闭linux系统？shutdown init 0 110./etc/fstab文件的作用是什么？这个文件描述系统中各种文件系统的信息，应用程序读取这个文件，然后根据其内容进行自动挂载的工作 111.使用命令”vi /etc/inittab“ 查看文件的内容，你不小心改动了一些内容，为了防止系统出问题，你不想报存所修改的内容，你应该如何操作？ :q! 按ESC后输入:q! 112.删除文件的命令是？rm -rf 文件名 113.显示已经 挂载的文件系统磁盘inode使用状况的命令是？df -h 114.网络管理员对www服务器可以进行访问，控制存取和运行等控制，这些控制可在（）文件中体现？ 1httpd.conf 1.httpd.conf 2.lilo.conf 3.inerd.conf 4.resolv.conf 115、如果想在linux下实现热启，应当修改/etc/inittab下的那一行（）。 21.#Trap CTRL-ALT-DELETE 2.#ca::ctrlaltfel :/sbin/shutdown -t3 -r now 3.#id:3:initdefault 4.#10:3:wait:/etc/rc.d.rc 3 116、启动samba服务器进程，可以有两种方式：独立启动方式和父进程启动方式，其中后者在（ 3 ）文件中以独立进程方式启动。 1./usr/sbin/smbd 2./usr/sbin/nmbd 3.rc.samba 4./etc/indetd.com 117、下列哪个命令建立在一个tar归档文件的啥时候列出纤细列表（3 ）1.tar -l 2.tar -cv 3.tar -cvf 4.tar -r 118、假设文件fileA的符号链接为fileB，那么删除fileA后，下面描述正确的是（2 ）1.fileB也随之删除 2.fileB仍存在，但是属于无效的文件 3.因为fileB未被删除，所以fileA会被系统自动重新新建立 4.fileB会随fileA的删除而被系统自动删除 119、改变文件所有者的命令？ 31.chmod 2.touch 3.chown 4.cat 120、在给定文件中查找与设定条件相符字符串的命令为（ 1 ）1.grep 2.gzip 3.find 4.sort 121、若要将当前目录中的myfile.txt问价压缩成myfile.txt.tar.gz，则实现的命令为？tar -czf myfile.txt.tar.gz myfile.txt 122、存放linux基本命令的目录是什么？/bin 123、若在文字界面下，需要键入何种指令才能进入图形界面（Xwindow）。 2 startx1.reboot 2.startx 3.startwindow 4.getinto 124、在linux中，要查看文件内容，可用什么命令？ cat filename vi filename 125、系统引导的过程中一般分为几步？:::⒈ 开机 ⒉ BIOS 加电自检 (Power On Self Test -- POST) 内存地址为 0FFFF : 0000 ⒊ 将硬盘第一个扇区 (0头0道[柱面]1扇区，也就是Boot Sector) 读入内存地址0000 : 7C00 处. ⒋ 检查（WORD) 0000 : 7DFE 是否等于0xAA55，若不等于则转去尝试其它启动介质 如果没有其它启动介质则显示e799bee5baa6e997aee7ad94e59b9ee7ad9431333361303131No ROM BASIC 然后死机. ⒌ 跳转到0000 : 7C00 处执行MBR 中的程序. ⒍ MBR 首先将自己复制到 0000 : 0600 处，然后继续执行. ⒎ 在主分区表中搜索标志为活动的分区. 如果发现没有活动分区或有不止一个活动分区，则转停止. ⒏ 将活动分区的第一个扇区读入内存地址 0000 : 7C00 处. ⒐ 检查（WORD) 0000 : 7DFE是否等于0xAA55，若不等于则显示Missing Operating System然后停 止，或尝试软盘启动 ⒑ 跳转到0000 : 7C00处继续执行特定系统的启动程序. ⒒ 启动系统 ...::: 127.字符界面下使用shutdown命令重启计算机时所用的参数？ shutdown -r 128.cd命令可以改变用户的当前目录，当用户键入命令cd并按Enter键后 31.当前目录改为根目录 2.当前目录不变，屏幕显示当前目录 3.当前目录为用户主目录 4.当前目录为上一级目录 129.在linux系统添加新用户的命令是？useradd username 130.添加用户时使用（）可以指定用户目useradd -d 用户目录 131.修改用户自身的密码可使用？ root : password user 其他用户： passwd 132.设计用户所使用的计算机系统上有两块IDE硬盘，linux系统位于第一块硬盘上，查询第二块硬盘的分区情况命令是？fdisk -l /dev/hdb 133.统计磁盘空间或文件系统使用情况的命令是？df -h 134.用于文件系统直接修改文件权限管理命令为____？ chown 135.若使pid进程无条件终止使用的命令是? kill -9 136.显示系统主机名的命令是？ uname -n 137.查询已安装软件dhcp内所含文件信息的命令是？ rpm -ql dhcp 138.linux服务器发生故障，使用df命令查看到某目录下有剩余空间，但是无法创建文件，可能的原因是什么？ 可能由于磁盘的inode分配完了，导致提示磁盘满 139.某个项目现场需要对数据库做一些调整，项目经理早上通知A晚上7点到项目现场的机房开始准备工作，7点30准时开始调整，A晚上7点到现场后发现项目现场的大门紧闭，给用户打电话为没人接，一直徘徊到8点才得以进入机房，A对数据库进行操作后，在程序上进行调试，对应的功能完成了修改，A离开现场。第二天下午项目经理打电话给小A说到用户反馈因A操作失误导致其他功能异常。整个事件出了哪些问题，如果换成你该怎么做。给用户打电话无人接听后给项目经理打电话确认时间是否修改以及确定如果时间推迟和客户确认是否还需要调整，调整前调整过后都和客户及项目经理确认是否成功。 140.某网站页面上的应显示图片和一些动态内容的一个展示框变为黑色，网站其他部分正常，可能的原因是什么？ 查看网站图片连接是否正常，图片是否存在，数据库是否可以正常访问 141.有一个普通想在每日凌晨零点零分定期备份/user/backup到目录下，该用户应如何做？ 0 24 * * * cp filename /user/backup 142、如何找回root密码？1. 在重启系统的时候通过不断按下上下选择键阻断系统进行入正常启动，而是进入启动选择界面，然后根据 系统提示按下‘e’键去编辑选项 2、找到如下图中标记中的那一部分，这就是需要编辑的部分 ![image-20200511163045073](assets/image-20200511163045073.png) 3. 将ro 以后到UTF-8结束的所有内容全部删掉，然后将ro改为rw rd.break 根据系统提示的下一步同时按下Ctl+x进入密码修改 4. 首先执行chroot /sysroot/进行入到系统根目录下 然后执行passwd命令进行密码修改 修改完成后在根下创建文件touch /.autorelabel，使得系统再次启动时能够识别修改 5、 最后通过执行两次exit命令使系统重启，然后修改的密码就会生效了！ 143、linux系统中用于打印队列查询的命令是？ Ipstat 144、以下文件中，只有root用户才能存取的是？ 2 1.passws 2.shadow 3.group 4.password 145、在/home目录下查找文件名为.Profile的文件，找到后删除 find /home -name .Profile -exec rm -rf {}; 146、.将test.tar.gz文件解压缩 tar xf test.tar.gz 147、创建一个用户，用户名为user02，所属私有组个标准组为sthff，用户家目录为/home/user2,用户 登录shell为/bin/bash useradd -s /bin/bash -d /home/user2 -G sthff 148、.赋予所有用户读和写backup.tar.gz文件的权限 chown 444 backup.tar.gz 149、请描述下列路径的内容是做什么？ /var/log/messages 存放的是系统的日志信息，它记录了各种事件，基本上什么应用都能往里写 日志，在做故障诊断时可以首先查看该文件内容 /var/log/secure 一般用来记录安全相关的信息，记录最多的是哪些用户登录服务器的相关日志，如 果该文件很大，说明有人在破解你的 root 密码 /var/spool/clientmqueue 是如果系统中有用户开启了cron，而cron中执行的程序有输出内容，输出 内容会以邮件形式发给cron的用户，而sendmail没有启动所以就产生了这些文件。 /proc/interrupts 列出当前所以系统注册的中断，记录中断号，中断发生次数，中断设备名称 /etc/profile 记录环境变量 、开机自启动内容 150、计划每星期天早上8点服务器定时重启，如何实现？ crontab -e 0 8 * * 0 reboot 151、.写出命令行发邮件，发件人：&#x31;&#x32;&#51;&#x40;&#97;&#98;&#x63;&#46;&#99;&#111;&#109;，收信人：&#97;&#x62;&#99;&#64;&#120;&#121;&#x7a;&#46;&#99;&#x6f;&#109;。主题为test mail -s test -r &#x31;&#x32;&#51;&#x40;&#x61;&#x62;&#99;&#46;&#99;&#x6f;&#109; &#x61;&#x62;&#99;&#x40;&#120;&#x79;&#122;&#46;&#99;&#111;&#x6d; 152、系统中在/etc/resolv.conf配置dns服务器地址，但后期会被清除什么原因 可能是NetworkManager的原因 FTP 1、ftp常用的两种模式 主动模式 FTP客户端连接到FTP服务器的21端口，发送用户名和密码登录，登录成功后要list列表或者读取数据时，客 户端随机开放一个端口（1024以上），发送 PORT命令到FTP服务器，告诉服务器客户端采用主动模式并开放 端口；FTP服务器收到PORT主动模式命令和端口号后，通过服务器的20端口和客户端开放的端口连接，发送数 据。 被动模式： FTP客户端连接到FTP服务器的21端口，发送用户名和密码登录，登录成功后要list列表或者读取数据时，发 送PASV命令到FTP服务器， 服务器在本地随机开放一个端口（1024以上），然后把开放的端口告诉客户端， 客户端再连接到服务器开放的端口进行数据传输， 2、配置一台匿名ftp服务，应该修改那个文件 /etc/vsftpd/vsftpd.conf 3、FTP传输中使用哪两个端口？ 21 21 4、升级安装vsftpd yum -y install vsftpd yum upgrade vsftpd NFS 1、AB网络是通的，最少列出三种传输文件服务？ scp rsync vsftpd 2、简述网络文件系统NFS，并说明其作用 （1）网络文件系统是应用层的一种应用服务，它主要应用于Linux系统之间的文件或目录的共享，现在也支持 linux和window系统之间。 （2）对于用户而言可以通过 NFS方便的访问远地的文件系统，使之成为本地文件系统的一部分。 （3）采用NFS之后省去了登录的过程，方便了用户访问系统资源。 3、一次写出osi七层模型 物理层、数据链路层、网络层、传输层、会话层、表示层、应用层 Web 1、找出/usr/local/apache2/logs中三天前以sd-360开头并以日期结尾的log并删除。 find / -mtime +3 -type f -a -name \"sd-360*\"\" -exec rm {} -f ; 2.我们想将/usr/local/nginx/logs中的log前一天做压缩,归档到 backup文件夹中,并保留7天的内容,你有 什么好办法?如果我们还想将log收集走并分析,使用什么工具?如果收集走并加以分析,你主要关注哪些指 标? 使用find命令查找，前一天的日志，或者在每天晚上12点将日志备份，打包压缩，使用shell脚本判断7天之 前的文件删除。分析日志可以使用elk或者通过python、shell脚本进行分析。 3、http 1.0和http 1.1下有何区别? http 2.0的主要变化或优势有哪些? http1.0-1.1: 1、http 1.0需要使用keep-alive参数来告知服务器端要建立一个长连接，而http1.1默认支持长连接。 2、http1.0是没有host域的，http1.1才支持这个参数。 3、http1.1更加节约带宽 http2.0:相比于http 1.x,大幅度的提升了web性能。在与http/1.1完全语义兼容的基础上，进一步减少 了网络延迟 4、简述一下apache和nginx的异同点。 两者最核心的区别在于apache是同步多进程模型，一个连接对应一个进程，而nginx是异步的，多个连接（万 级别）可以对应一个进程。一般来说，需要性能的web服务，用nginx。如果不需要性能只求稳定，更考虑 apache，apache的各种功能模块实现比nginx好，例如ssl的模块就比nginx好，可配置项多。 epoll（freebsd 上是kqueue）网络IO模型是nginx处理性能高的根本理由，但并不是所有的情况下都是 epoll 大获全胜的，如果本身提供静态服务的就只有寥寥几个文件，apache的select模型或许比epoll更高 性能。当然，这只是根据网络IO模型的原理作的一个假设，真正的应用还是需要实测。更为通用的方案是，前 端nginx抗并发，后端apache集群，配合起来会更好。 5、apache如何修改配置参数，将默认端口改为非默认端口。 Listen 80 6、通过apache 访问日志access. log统计IP和每个地址访问的次数，按访问量列出前10名。日志格式样 例如下 192.167.1.247 [02/Ju1/2010:23:44:59 +0800] “GET / HTTP/1.1”200 19 awk '{print $1}' access.log | sort |uniq -c |sort -r 7、网络管理员对www服务器可进行访问、控制存取和运行等控制，这些控制可在(A )文件中体现。 A.httpd.conf B.lilo.conf C.inetd.conf D.resolv.conf 8、某网站页面上的应展示图片和一些动态内容的一个展示框变为黑色，网站其他部分正常，可能的原因 是什么? 网站页面源码的静态资源路径问题。 9、某日志路径 是/data/logs/a.txt. 如何跟踪该日志，以查看当时的运行状况? tailf /data/logs/a.txt 10、HTTP协议默认使用的端口号为( ) ，FTP 协议默认使用的端口号为()，Microsoft SQL Server数据库 默认使用的端口号为( )，Windows操作系统远程桌面应用使用的默认端口号是()。 80 21 1433 3389 11、HTML语言中，用于加入一个层的标签是()，用于加入图片的标签是()，用于链接外部样式的标签是 () div img link 12、apache和nginx的主配置文件是什么？ apache: /etc/httpd/conf/httpd.conf nginx: /etc/nginx/nginx.conf 13、apache有几种工作模式，分别简述两种工作模式及其优缺点？ Prefork MPM： 优点：成熟，兼容所有新老模块。进程之间完全独立，使得它非常稳定。同时，不需要担心线程安全的问题。 （我们常用的mod_php，PHP的拓展不需要支持线程安全） 缺点：一个进程相对占用更多的系统资源，消耗更多的内存。而且，它并不擅长处理高并发请求，在这种场景 下，它会将请求放进队列中，一直等到有可用进程，请求才会被处理。 Worker MPM： 优点：占据更少的内存，高并发下表现更优秀。 缺点：必须考虑线程安全的问题，因为多个子线程是共享父进程的内存地址的。如果使用keep-alive的长连 接方式，也许中间几乎没有请求，这时就会发生阻塞，线程被挂起，需要一直等待到超时才会被释放。如果过 多的线程，被这样占据，也会导致在高并发场景下的无服务线程可用。（该问题在prefork模式下，同样会发 生） Event MPM 14、http和https有什么区别？ http协议：是超文本传输协议，信息是明文传输。如果攻击者截取了Web浏览器和网站服务器之间的传输报 文，就可以直接读懂其中的信息。 https协议：是具有安全性的ssl加密传输协议，为浏览器和服务器之间的通信加密，确保数据传输的安全。 15、有一web服务器，某天某用户投诉上某个网站速度很慢，如果你是服务器的管理员，请问你如何查 找原因。假设服务器有任意操作系统和软件。 1.检查网站的在线用户量，根据用户的并发量来做初步判断是不是因为并发量过大引起的数据库连接负荷原 因。 2.检查数据库连接是否满负荷。 3.通过浏览器自带的检测请求发送到返回的时间来判断是否是因为用户带宽原因。 16、已知apache服务的访问日志按天记录在服务器本地目录/app/logs下， 由于磁盘空间紧张，现在要求只能保留最近7天访问日志!请问如何解决? find /app/logs -type f -name \"access*.log\" -mtime +7 exec rm –f {} ; 17、aptget remove httpd和apt-get purge httpd的区别是什么? apt-get remove 只删除软件包，不删除配置文件 apt-get purge 删除软件包并删除配置文件 18、http状态码有哪些？ 分别表示什么意思？ 200 - 请求成功 301 - 资源（网页等）被永久转移到其它URL 403 Forbidden 服务器理解请求客户端的请求，但是拒绝执行此请求 404 - 请求的资源（网页等）不存在 500 - 内部服务器错误 502 Bad Gateway 作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应 19、介绍一下哪些可以优化加速用户访问网站体验的技术措施? 1、使用固态硬盘存储静态资源，扩大带宽 2、压缩或精简代码 3、降低HTTP请求 4、服务器端开启gzip压缩功能 5、使用cdn加速 20、什么叫网站灰度发布?如何实现灰度发布? 什么是灰度发布：在一般情况下，升级服务器端应用，需要将应用源码或程序包上传到服务器，然后停止掉老 版本服务，再启动新版本。但是这种简单的发布方式存在两个问题，一方面，在新版本升级过程中，服务是暂 时中断的，另一方面，如果新版本有BUG，升级失败，回滚起来也非常麻烦，容易造成更长时间的服务不可 用。 如何实现灰度发布： Nginx+LUA方式 根据Cookie实现灰度发布 根据来路IP实现灰度发布 21、当你在浏览器输入一个网址，如http://www.baidu.com, 按回车之后发生了什么?请从技术的角度描 述，如浏览器、网络、服务器等各种参与对象上由此引发的一系列活 动，请尽说出可能的涉及到所有的关键技术点。 1.DNS解析 DNS解析的过程就是寻找哪台机器上有你需要资源的过程，寻找的过程遵循就近原则。 输入一个网址并按回车的时候浏览器会根据输入的URL去查找对应的IP，具体过程如下： （1）首先是查找浏览器缓存，浏览器会保存一段时间内访问过的一些网址的DNS信息，不同浏览器保存的时常 不等。 （2）如果没有找到对应的记录，这个时候浏览器会尝试调用操作系统缓存来继续查找这个网址的对应DNS信 息。 （3）如果还是没找到对应的IP，那么接着会发送一个请求到路由器上，然后路由器在自己的路由器缓存上查 找记录，路由器一般也存有DNS信息。 （4）如果还是没有，这个请求就会被发送到ISP（注：Internet Service Provider，互联网服务提供 商，就是网络运营商，中国电信中国移动等），ISP也会有相应的ISP DNS服务器，就是本地DNS服务器，请 求的域名基本上都能在这里找得到。 （5）如果还是没有的话， ISP的DNS服务器会将请求发向根域名服务器进行搜索。根域名服务器就是面向全 球的顶级DNS服务器，共有13台逻辑上的服务器，从A到M命名，真正的实体服务器则有几百台，分布于全球各 大洲。 （6）如果到了这里还是找不到域名的对应信息，那只能说明一个问题：这个域名本来就不存在，它没有在网上 正式注册过。或者域名过期了。 这也就是为什么有时候打开一个新页面会有点慢，因为如果本地没什么缓存，查找域名的过程要这样递归地查 询下去，查找完还要一层层的向上返回。例如\"mp3.baidu.com\"，域名先是解析出这是个.com的域名，然后 跑到管理.com域的服务器上进行进一步查询，然后是.baidu，最后是mp3， 所以域名结构为：三级域名.二 级域名.一级域名。 所以DNS根据域名查询IP地址的过程为：浏览器缓存 --> 操作系统缓存 --> 路由器缓存-->本地（ISP）域 名服务器缓存 --> 根域名服务器。 2.进行TCP连接 浏览器终于得到了IP以后，向服务器发送TCP连接，TCP连接经过三次握手。 3.浏览器发送HTTP请求 浏览器和服务器建立连接以后，浏览器接着给这个IP地址给服务器发送一个http请求，方式为get，例如访问 www.baidu.com。其本质是在建立起的TCP连接中，按照HTTP协议标准发送一个索要网页的请求。 这个get请求包含了主机（Host）、用户代理(User-Agent)，用户代理就是自己的浏览器，它是你的\"代理 人\"，Connection（连接属性）中的keep-alive表示浏览器告诉对方服务器在传输完现在请求的内容后不要 断开连接，不断开的话下次继续连接速度就很快了。可能还会有Cookies，Cookies保存了用户的登陆信息， 一般保存的是用户的JSESSIONID，在每次向服务器发送请求的时候会重复发送给服务器。 在建立连接发送请求时每个服务端需要和客户端保持通信，有很多客户端都会和服务器进行通信。服务器为了 识别是哪个客户端与它通信，就必须用一个标识记录客户端的信息。客户端首次访问服务器，服务端返回响应 时通过附带一个记录的客户端信息的标识来返回给客户端，这个标识就是JSESSIONID，JSESSIONID就放在 了客户端的Cookies里。当客户端再次向服务器发送请求时上就使用上次记录的Cookies里面的 JSESSIONID， 这样服务器就知道是哪个浏览器了。这样他们之间就能保持通信了。 发送完请求接下来就是等待回应了，如下图： 4.服务器处理请求 发送完请求接下来就是等待回应了，如下图： 服务器收到浏览器的请求以后），会解析这个请求（读请求头），然后生成一个响应头和具体响应内容。接着 服务器会传回来一个响应头和一个响应，响应头告诉了浏览器一些必要的信息，例如重要的Status Code，2 开头如200表示一切正常，3开头表示重定向，4开头是客户端错误，如404表示请求的资源不存在，5开头表示 服务器端错误。响应就是具体的要请求的页面内容。 5.浏览器解析渲染页面 （1）浏览器显示HTML 当服务器返回响应之后，浏览器读取关于这个响应的说明书（响应头），然后开始解析这个响应并在页面上显 示出来。 浏览器打开一个网址的时候会慢慢加载这个页面，一部分一部分的显示，直到完全显示，知道最后的旋转进度 条停止。因此在浏览器没有完整接受全部HTML文档时，它就已经开始显示这个页面了。 （2）浏览器向服务器发送请求获取嵌入在HTML中的对象 在浏览器显示HTML时，打开一个网页的过程中，主页（index）页面框架传送过来以后，浏览器还会因页面上 的静态资源多次发起连接请求，需要获取嵌入在HTML中的其他地址的资源。这时，浏览器会发送一些请求来获 取这些文件。这些内容也要一点点地请求过来，所以标签栏转啊转，内容刷啊刷，最后全部请求并加载好了就 终于好了。 这时请求的内容是主页里面包含的一些资源，如图片，视频，css样式，JavaScript文件等等。 这在文件属于静态文件，首次访问会留在浏览器的缓存中，过期才会从服务器去取。缓存的内容通常不会保存 很久，因为难保网站不会被改动。 静态的文件一般会从CDN中去取，CDN根据请求获取资源的时候可能还会用到负载均衡。 （3）浏览器发送异步（AJAX）请求 对于那些动态的请求，动态网页等就必须要从服务器获取了。对于静态的页面内容，浏览器通常会进行缓存， 而对于动态的内容，浏览器通常不会进行缓存。对于这些动态请求，Nginx可能会专门设置一些服务器用来处 理这些访问动态页面的请求。 6.关闭TCP连接 当数据完成请求到返回的过程之后，根据Connection的Keep-Alive属性可以选择是否断开TCP连接， HTTP/1.1一般支持同一个TCP多个请求，而不是1.0版本下的完成一次请求就发生断开。TCP的断开与连接不 一样，断开可以分为主动关闭和被动关闭，需要经过4次握手。 当浏览器需要的全部数据都已经加载完毕，一个页面就显示完了。 22、网站出现200,302,400,403.404,500,502,503都是什么意思？ 200 OK 请求成功。一般用于GET与POST请求 302 Found 临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI 400 Bad Request 客户端请求的语法错误，服务器无法理解 403 Forbidden 服务器理解请求客户端的请求，但是拒绝执行此请求 404 Not Found 服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置\"您 所请求的资源无法找到\"的个性页面 500 Internal Server Error 服务器内部错误，无法完成请求 502 Bad Gateway 作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应 503 Service Unavailable 由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包 含在服务器的Retry-After头信息中 23、配置Apache服务器需要修改的配置文件为( A) A. httpd.conf B. access.conf C. srm.conf D. named.conf 24、当用户反映访问你所维护的WEB服务器速度慢，访问其它网站都很流畅时．你的排查思路是什么？ 1.检查网站的在线用户量，根据用户的并发量来做初步判断是不是因为并发量过大引起的数据库连接负荷原 因。 2.检查数据库连接是否满负荷。 25、apache在linux系统上安装的步骤和命令 yum install -y httpd systemctl start httpd 26、网站打开慢，请给出排查方法，如果是上数据库慢导致，如何排查并解决。 1、是否后端服务有问题，例如php-fpm tomcat 2、进库explian 检查语句是否有进程问题 3、看看查询语句是否有索引 1、nginx服务器的配置文件是? /etc/nginx/nginx.conf 2、MySQL创建数据库的命令,创建表的命令,插入语句的命令 create database dbname character set 'utf8'; create table tname(id int); insert into tname values(1); 3、描述lvs,nginx负载均衡的五种调度算法 rr wrr dh sh lc 4、Apache如何修改配置参数,将默认端口改为非默认端口 vim /etc/httpd/conf/httpd.conf Listen port 5、如何实现nginx代理的节点访问日志记录客户的ip而不是代理的ip 修改nignx负载均衡器的/usr/local/nginx/conf/nginx.conf； 在location / 添加 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 6、linux系统nginxphp环境，发现php-fpm进程高，请说明可能原因以及如何解决 1）php的插件程序与现有的PHP版本存在不兼容情况，解决方法从php.ini中禁止相关插件 2）php程序存在死循环现象，使用服务器负载过高，解决方法使用top命令查看 3）php-fpm服务池开启了太多子进程，通过配置 pm.max_children 属性，控制php-fpm子进程数量 7、Nginx禁止访问test目录 location =/test{ return 404; } 8、如何实现系统接入层nginx灰度发布？ nginx 做反向代理+负载均衡 如果是内部IP，则反向代理到预发布环境；如果不是则反向代理到生产环境。 9、列出你常用的nginx模块，用来做什么 ngx_http_access_module模块 ：访问控制的模块 ngx_http_auth_basic_module模块 ：使用basic机制进行用户验证 ngx_http_stub_status_module模块 ：用来查看http的状态信息 ngx_http_log_module 模块 ：nginx的日志模块 ngx_http_gzip_module 模块 ：对传输的数据进行压缩 ngx_http_ssl_module 模块 ：设置https连接的模块 ngx_http_rewrite_module模块 ：对用户的uri请求进行匹配，然后替换成指定的uri ngx_http_referer_module模块 :做防盗链的模块， 1、Tomcat调整JVM内存大小需要修改那些配置文件 在catalina.sh文件中，找到cygwin=false，在这一行的前面加入参数，具体如下 vi TOMCAT_HOME/bin/catalina.shJAVA_OPTS=\"-server -Xms800m -Xmx800m -XX:PermSize=256m -XX:MaxPermSize=512m - XX:MaxNewSize=512m\" 2、Tomcat服务器配置为2核4G,CATALINA.OUT日志目前6.2G，我们需要打开文件并搜索一些关键词， 并分析上下文。用什么命令查看比较合适，为什么？ vi catalina.out 进入后 /关键词 3、tomcat jvm内存参数，在物理内存充足的情况下，是否越大越好，为什么？ 不是，1、如果系统上不止有tomcat，那么会影响其他服务的运行 2、tomcat得GC垃圾回收机制 4、优化tomcat你会如何操作 一、有富余物理内存的情况，加大tomcat使用的jvm的内存 二、服务器资源 服务器所能提供CPU、内存、硬盘的性能对处理能力有决定性影响。 (1) 对于高并发情况下会有大量的运算，那么CPU的速度会直接影响到处理速度。 (2) 内存在大量数据处理的情况下，将会有较大的内存容量需求，可以用-Xmx -Xms - XX:MaxPermSize等参数对内存不同功能块进行划分。我们之前就遇到过内存分配不足，导致虚拟机一直处于 full GC，从而导致处理能力严重下降。 (3) 硬盘主要问题就是读写性能，当大量文件进行读写时，磁盘极容易成为性能瓶颈。最好的办法还是利 用下面提到的缓存。 三、利用缓存和压缩 对于静态页面最好是能够缓存起来，这样就不必每次从磁盘上读。这里我们采用了Nginx作为缓存服务 器，将图片、css、js文件都进行了缓存，有效的减少了后端tomcat的访问。 另外，为了能加快网络传输速度，开启gzip压缩也是必不可少的。但考虑到tomcat已经需要处理很多东 西了，所以把这个压缩的工作就交给前端的Nginx来完成。 除了文本可以用gzip压缩，其实很多图片也可以用图像处理工具预先进行压缩，找到一个平衡点可以让画 质损失很小而文件可以减小很多。曾经我就见过一个图片从300多kb压缩到几十kb，自己几乎看不出来区别。 四、采用集群 单个服务器性能总是有限的，最好的办法自然是实现横向扩展，那么组建tomcat集群是有效提升性能的手 段。我们还是采用了Nginx来作为请求分流的服务器，后端多个tomcat共享session来协同工作。 五、 优化tomcat参数 这里以tomcat7的参数配置为例，需要修改conf/server.xml文件，主要是优化连接配置，关闭客户端 dns查询。 DNS 1、关于DNS,下列说法错误的是( C) A、DNS,全称Domain Name System,即域名解析系统 B、DNS协议运行在UDP协议之上。 C、只有基于类Linux, Unix操作系统的服务器,才可以安装DNS服务器端软件 D、域名的最终指向是IP地址。 2、列举你所知道的域名解析记录类型 A记录 CNAME记录 URL转发 MX记录 NS 3、简述DNS进行域名解析的过程。 1、当客户机提出查询请求时，首先在本地计算机的缓存中查找。如果在本地无法获得查询信息，则将查询请求 发给DNS服务器。 2、首先客户机将域名查询请求发送到本地DNS服务器,当本地DNS服务器接到查询后，首先在该服务器管理的 区域的记录中查找，如果找到该记录，则利用此记录进行解析；如果没有区域信息可以满足查询要求，服务器 在本地的缓存中查找。 3、如果本地服务器不能在本地找到客户机查询的信息，将客户机请求发送到根域名DNS服务器。 4、根域名服务器负责解析客户机请求的根域部分，它将包含下一级域名信息的DNS服务器地址返回给客户机的 DNS服务器地址。 5、客户机的DNS服务器利用根域名服务器解析的地址访问下一级DNS服务器，得到再下一级域我的DNS服务器 地址。 6、按照上述递归方法逐级接近查询目标，最后在有目标域名的DNS服务器上找到相应IP地址信息。 7、客户机的本地DNS服务器将递归查询结果返回客户机。 8、客户机利用从本地DNS服务器查询得到的IP访问目标主机，就完成了一个解析过程。 4、简述DNS和DHCP的功能 DNS提供域名解析服务 DHCP提供动态ip分配 5、关于DNS服务器，叙述正确的是(C)， A、DNS服务器配置不需要配置客户端 B、建立某个分区的DNS服务器时只需要建立一个主DNS服务器 C、主DNS服务器需要启动named进程，而辅DNS服务器不需要 D、DNS服务器的root.cache文件包含了根名字服务器的有关信息 6、当内网内没有条件建立dns服务器，又不想用IP访问网站，应配置的文件是(A) A honts B sysconfig C network D hostname 7、当内网内没有条件建立dns服务器，又不想用IP访同网站，应配置什么文 件。(A) A.hosts B.sysconfig C.network D.hostname 8、DNS域名系统主要负责主机名和（A）之间的解析 A、IP地址 B、MAC地址 C、网络游戏 D、主机别名 9、权威DNS和递归DNS、迭代DNS的不同 一、主机向本地域名服务器的查询一般都是采用递归查询。 所谓递归查询就是：如果主机所询问的本地域名服务器不知道被查询的域名的IP地址，那么本地域 名服务器就以DNS客户的身份， 向其它根域名服务器继续发出查询请求报文(即替主机继续查询)，而不是让主机自己进行下一步查 询。 因此，递归查询返回的查询结果或者是所要查询的IP地址，或者是报错，表示无法查询到所需的IP 地址。 二、本地域名服务器向根域名服务器的查询的迭代查询。 迭代查询的特点：当根域名服务器收到本地域名服务器发出的迭代查询请求报文时，要么给出所要查 询的IP地址，要么告诉本地服务器：“你下一步应当向哪一个域名服务器进行查询”。 然后让本地服务器进行后续的查询。根域名服务器通常是把自己知道的顶级域名服务器的IP地址告 诉本地域名服务器，让本地域名服务器再向顶级域名服务器查询。 顶级域名服务器在收到本地域名服务器的查询请求后，要么给出所要查询的IP地址，要么告诉本地 服务器下一步应当向哪一个权限域名服务器进行查询。 最后，知道了所要解析的IP地址或报错，然后把这个结果返回给发起查询的主机 10、Linux系统中DNS服务进程名为(A) A、named B、httpd C、ftpd D、SysLog 11、当用户在浏览器当中输入一个网站，说说DNS解释经过哪些流程？ a.用户输入网址到浏览器； b.浏览器发出DNS请求信息； c.计算机首先查询本机HOST文件，看是否存在，存在直接返回结果，不存在，继续下一步； d.计算机按照本地DNS的顺序，向合法dns服务器查询IP结果； e.合法dns返回dns结果给本地dns，本地dns并缓存本结果，直到TTL过期，才再次查询此结果； f.返回IP结果给浏览器； g.浏览器根据IP信息，获取页面； 12、当你在浏览器输入一个网址，如http://www.baidu.com，按回车之后发生了什么？请从技术角度描 述，如浏览器、网络、服务器等各种参与对象由此引发的一系列活动，请尽说出可能涉及到所有的关键 技术点。 我们输入一个域名： www.taobao.com ，浏览器查找浏览器缓存，如果有域名的 IP 地址则返回，如果没 有继续查找； 系统查找系统缓存，如果有域名的 IP 地址则返回，如果没有继续查找；路由器查找路由器缓存，如果有域名 的 IP 地址则返回，如果没有继续查找；本地域名服务器采用迭代查询，它先向一个根域名服务器查询；根域 名服务器告诉本地域名服务器，下一次应查询的顶级域名服务器 dns.com 的 IP 地址；本地域名服务器向 顶级域名服务器 dns.com 进行查询； 顶级域名服务器 dns.com 告诉本地域名服务器，下一次应查询的权限域名服务器 dns.taobao.com 的 IP 地址；本地域名服务器向权限域名服务器 dns.taobao.com 进行查询；权限域名服务器 dns.taobao.com 告诉本地域名服务器，所查询的主机 www.taobao.com 的 IP 地址；本地域名服务器 最后把查询结果告诉主机；主机浏览器获取到 Web 服务器的 IP 地址后，与服务器建立 TCP 连接；浏览器 所在的客户机向服务器发出连接请求报文； 服务器接收报文后，同意建立连接，向客户机发出确认报文，客户 机接收到确认报文后，再次向服务器发出报文，确认已接收到确认报文；此处客户机与服务器之间的 TCP 连 接建立完成，开始通信；浏览器发出取文件命令： GET ；服务器给出响应，将指定文件发送给浏览器； 浏览器释放 TCP 连接；浏览器所在主机向服务器发出连接释放报文，然后停止发送数据；服务器接收到释放 报文后发出确认报文，然后将服务器上未传送完的数据发送完；服务器数据传输完毕后，向客户机发送连接释 放报文；客户机接收到报文后，发出确认，然后等待一段时间后，释放 TCP 连接；浏览器显示页面中所有文 本。 13、linux系统中DNS服务的进程名为? 软件名为bind 启动服务： service named start 14、DNS服务器的特点 DNS服务器重新对配置了静态地址的客户端进行重新配置 .15、权威DNS和递归DNS、迭代DNS的不同？ 递归解析”（或叫“递归查询”，其实意思是一样的）是最常见，也是默认的解析方式。在这种解析方式中，如 果客户端配置的本地名称服务器不能解析的话，则后面的查询全由本地名称服务器代替DNS客户端进行查询， 直到本地名称服务器从权威名称服务器得到了正确的解析结果，然后由本地名称服务器告诉DNS客户端查询的 结果。 迭代DNS所有查询工作全部是DNS客户端自己进行（以“DNS客户端”自己为中心）。 DHCP 1、简要说明客户机使用DHCP获取IP地址的过程 1、终端以广播的形式向网络内广播DISCOVER发现报文，报文中携带相关的参数列表。 2、网络内的服务器，从可用地址池中分配一个ip地址给客户机，向这个地址广播offer报文，报文中携带终 端请求的参数。 3、终端从响应offer的服务器中选择一个，并在request报文中携带选择的服务器的ip和服务器分配给自己 的ip地址。并进行广播，把终端选择的地址和服务器通知网络内所有主机服务器。 4、网络内的服务器收到终端的request请求后，如果是终端选择的服务器，根据的是上面request报文中是 否携带自身的信息，比如IP地址。则发送一个广播ACK,确定分配地址等信息；如果不是终端选择的服务，则不 响应，并收回分配的地址到可用地址池中。 5、终端收到ack后就把ip地址等信息跟网卡绑定。 2、请写出190.5.27.13/16网段的网络地址和广播地址。 网络地址：190.5.0.0 广播地址：192.5.255.255 3、保存当前磁盘分区的分区表 partprobe 4、手动安装grub 1、使用 grul-install 命令在要启动的分区中安装 GRUB 相关文件 2、修改GRUB的配置文件 3、安装GRUB到/dev/sdb1分区的启动扇区中 5、修改内核参数 vim /etc/sysctl.conf sysctl -p 6.在1-39内取随机数 echo $[$RANDOM % 40] Ansible 1、请写出saltstack或者ansible中你常用的5个管理模块。 saltstack: cmd acl cloud cp cron ansible: shell copy yum service cron 2、你对自动化运维的理解，以及自动化运维需要掌握哪些技能？ 1、项目部署维护能力 2、脚本开发能力 3、运维方案制定，业务架构关联分析 4、shell、python使用能力，应用架构设计能力 3、如何用ansible获取远程服务器10.10.125.125的时间（环境配置已完成） ansible 10.10.125.125 -m shell -a 'date' 4、ansible你用过它的哪些模块，ansbile同时分发多台服务器的过程很慢(它是逐台分发的)，你想过怎 么解决吗? 通过ansible的异步和并发设置：async和poll 或者在配置文件中设置forks，并发进程数。 5、ansible用过没有，熟不熟,问对四百太服务器设置IP和不同的网关怎么做? 先确定机器和新ip、网关的对应关系，然后通过script模块执行shell脚本完成配置 6、一台新装的 Centos操作系统机器，要开始部署业务服务之前需要做什么操作?如果有二十台了，要怎 么做? 1、需要先进行环境初始化，根据业务需求，调整防火墙，selinux的配置，修改内核参数，以满足业务需 求。 2、如果需要操作的服务器较多，可以使用自动化运维工具完成配置，如ansible等。 7、常用的运维自动化工具写出两种: saltstack、ansible 负载均衡高可用 1、简述keepalived实现高可用部署的原理 虚拟路由冗余协议，可以认为是实现路由器高可用的协议，即将N台提供相同功能的路由器组成一个路由器组， 这个组里面有一个master和多个backup，master上面有一个对外提供服务的vip（该路由器所在局域网内其 他机器的默认路由为该vip），master会发组播，当backup收不到vrrp包时就认为master宕掉了，这时就 需要根据VRRP的优先级来选举一个backup当master。这样的话就可以保证路由器的高可用 2、请详细说明LVS DR模式的原理以及Keepalived高可用服务工作原理？ LVS DR:客户端向目标vip发出请求,lvs接收 ，LVS根据负载均衡算法选择一台活跃的的节点，将此节点的 ip所在网卡的mac地址作为目标mac地址,发送到局域网里,节点在局域网中收到这个帧,拆开后发现目标 IP(VIP)与本地匹配,于是处理这个报文.随后重新封装报文,发送到局域网.此时IP包的目标ip是客户端，源 ip是自己的vip地址。 Keepalived高可用:keepalived通过vrrp协议来实现故障切换转移。在主节点正常工作的时候，会不断地 向备节点广播心跳消息，用以告诉备节点自己还活着，当主节点发生故障的时候，备节点就无法收到主节点广 播的消息，即可判定主节点发生故障，进而调用自身的接管程序，接管主节点的IP资源及服务。而而当主节点 被修复时，备节点会释放主节点故障时自己所接管的IP资源和服务，恢复到原来备用的角色。 3.LVS支持几种模式，工作过程是什么？ NAT模式 原理 这个是通过网络地址转换的方法来实现调度的。首先调度器(LB)接收到客户的请求数据包时（请求的目的IP为 VIP），根据调度算法决定将请求发送给哪个后端的真实服务器（RS）。然后调度就把客户端发送的请求数据 包的目标IP地址及端口改成后端真实服务器的IP地址（RIP）,这样真实服务器（RS）就能够接收到客户的请 求数据包了。真实服务器响应完请求后，查看默认路由（NAT模式下我们需要把RS的默认路由设置为LB服务 器。）把响应后的数据包发送给LB,LB再接收到响应包后，把包的源地址改成虚拟地址（VIP）然后发送回给 客户端。 TUN模式（隧道模式） 原理 v采用NAT模式时，由于请求和响应的报文必须通过调度器地址重写，当客户请求越来越多时，调度器处理能力 将成为瓶颈。为了解决这个问题，调度器把请求的报文通过IP隧道转发到真实的服务器。真实的服务器将响应 处理后的数据直接返回给客户端。这样调度器就只处理请求入站报文，由于一般网络服务应答数据比请求报文 大很多，采用VS/TUN模式后，集群系统的最大吞吐量可以提高10倍。 DR模式（直接路由模式） 原理 DR模式是通过改写请求报文的目标MAC地址，将请求发给真实服务器的，而真实服务器响应后的处理结果直接 返回给客户端用户。同TUN模式一样，DR模式可以极大的提高集群系统的伸缩性。而且DR模式没有IP隧道的开 销，对集群中的真实服务器也没有必要必须支持IP隧道协议的要求。但是要求调度器LB与真实服务器RS都有一 块网卡连接到同一物理网段上，必须在同一个局域网环境。 LVS-FULLNAT转发模式 FULLNAT转发数据包是类似NAT模式，IN和OUT数据包都是经过LVS；唯一的区别：后端RealServer 或者交 换机不需要做任何配置。FULLNAT的主要原理是引入local address（内网ip地址），cip-vip转换为 lip->rip， 而 lip和rip均为IDC内网ip，可以跨vlan通讯 4、在一个系统架构中，我们为了避免单点故障会怎么做？请写出至少2中方案及优点。 做集群 比如nginx 会做反向代理、利用nginx 或lvs 做负载均衡 ，利用keepalived做高可用 5、LVS、nginx、HAproxy有什么区别？工作中你怎么选择？ LVS的优点： 1、抗负载能力强、工作在第4层仅作分发之用，没有流量的产生，这个特点也决定了它在负载均衡软件里的性 能最强的；无流量，同时保证了均衡器IO的性能不会受到大流量的影响； 2、工作稳定，自身有完整的双机热备方案，如LVS+Keepalived和LVS+Heartbeat； 3、应用范围比较广，可以对所有应用做负载均衡； 4、配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，所以并不需要太多接触，大大减 少了人为出错的几率； LVS的缺点： 1、软件本身不支持正则处理，不能做动静分离，这就凸显了Nginx/HAProxy+Keepalived的优势。 2、如果网站应用比较庞大，LVS/DR+Keepalived就比较复杂了，特别是后面有Windows Server应用的机 器，实施及配置还有维护过程就比较麻烦，相对而言，Nginx/HAProxy+Keepalived就简单多了。 Nginx的优点： 1、工作在OSI第7层，可以针对http应用做一些分流的策略。比如针对域名、目录结构。它的正则比HAProxy 更为强大和灵活； 2、Nginx对网络的依赖非常小，理论上能ping通就就能进行负载功能，这个也是它的优势所在； 3、Nginx安装和配置比较简单，测试起来比较方便； 4、可以承担高的负载压力且稳定，一般能支撑超过几万次的并发量； 5、Nginx可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等等，并且会 把返回错误的请求重新提交到另一个节点； 6、Nginx不仅仅是一款优秀的负载均衡器/反向代理软件，它同时也是功能强大的Web应用服务器。LNMP现在 也是非常流行的web环境，大有和LAMP环境分庭抗礼之势，Nginx在处理静态页面、特别是抗高并发方面相对 apache有优势； 7、Nginx现在作为Web反向加速缓存越来越成熟了，速度比传统的Squid服务器更快，有需求的朋友可以考虑 用其作为反向代理加速器； Nginx的缺点： 1、Nginx不支持url来检测。 2、Nginx仅能支持http和Email，这个它的弱势。 3、Nginx的Session的保持，Cookie的引导能力相对欠缺。 HAProxy的优点： 1、HAProxy是支持虚拟主机的，可以工作在4、7层(支持多网段)； 2、能够补充Nginx的一些缺点比如Session的保持，Cookie的引导等工作； 3、支持url检测后端的服务器； 4、它跟LVS一样，本身仅仅就只是一款负载均衡软件；单纯从效率上来讲HAProxy更会比Nginx有更出色的负 载均衡速度，在并发处理上也是优于Nginx的； 5、HAProxy可以对Mysql读进行负载均衡，对后端的MySQL节点进行检测和负载均衡，不过在后端的MySQL slaves数量超过10台时性能不如LVS； 6、HAProxy的算法较多，达到8种； LVS： 是基于四层的转发 HAproxy： 是基于四层和七层的转发，是专业的代理服务器 Nginx： 是WEB服务器，缓存服务器，又是反向代理服务器，可以做七层的转发 区别： LVS由于是基于四层的转发所以只能做端口的转发 而基于URL的、基于目录的这种转发LVS就做不了 工作选择： HAproxy和Nginx由于可以做七层的转发，所以URL和目录的转发都可以做 在很大并发量的时候我们就要选择LVS，像中小型公司的话并发量没那么大 选择HAproxy或者Nginx足已，由于HAproxy由是专业的代理服务器 配置简单，所以中小型企业推荐使用HAproxy Git+Jenkins 1、简述集中式版本管理和分布式版本管理的优缺点。 集中式优点： 1、采用集中式，易于管理，保证安全性； 2、管理方便，逻辑明确，理念符合常规思维； 3、代码的一致性高； 4、适合人数不多的项目开发； 5、允许一个文件有任意多的可命名属性，会关注所有的文件类型； 6、支持二进制文件，更容易处理大文件； 集中式缺点： 1、服务器压力太大，数据库容量暴增； 2、必须连接在服务器上，否则基本不能工作、提交、对比、还原等； 3、不适合开源开发。 分布式优点： 1、适合分布式开发，强调个体； 2、公共的服务器压力和数量都不会太大； 3、速度快，成熟的架构，开发灵活； 4、任意两个开发者之间可以很容易的解决冲突； 5、离线工作，管理代码成本低，不需要依赖服务器； 6、部署方便。基本上下个命令就可以用； 7、良好的分支机制，可以让主干代码保持干净。 分布式缺点： 1、资料少，学习成本比较大，学习周期比较长，要求人员素质比较高； 2、不符合常规思维； 3、代码保密性差，一旦开发者把整个库克隆下来就可以完全公开所有代码和版本信息。 Jenkins怎么实现上线? gitlab怎么备份的 什么是配置管理?配置管理目的是什么? 简述一个系统的发布流程。 简述软件完整的生命周期，及工作过程中产品从立项到上线的流程。 不考虑环境因素，简述引起编译过程报错的原因。 简述集中式版本管理和分布式版本管理的优缺点。 说一下你了解的配置管理，版本控制，持续集成等工具？ jenkins都用过哪些插件，简单介绍一下？jenkins如何备份？ 用命令将test.sh文件发送到OS为Centos的minion 的/usr/local目录下 Jenkins你是怎样使用的，如何发布代码和回滚代码?有结合使用其他软件比如gitlab没有? Jenkins什么版本 有没有用到pipeline 公有云 1、你用过那些云平台？用过其中的那些产品 阿里云、华为云 2、你所知道的是虚拟化产品和方案有哪些？并对这些方案进行一个简单的对比。 虚拟化软件有： (1) 公有云平台：亚马逊AWS，阿里云，腾讯云，华为云，QingCloud； (2) 混合云平台：ZStack，BeyondCMP，CAS虚拟化平台等； (3) 私有云平台：VisionStack杭州云容，ESCloud易捷云，Ucloud，AWCloud，ZStack等 架构 1、说说你对B/S结构与CIS结构的认识。 B/S 是浏览器服务器架构 C/S 是客户端服务端架构 客户端服务端架构 对硬件和软件要求高 浏览器服务器架构 C/S 程序可以处理用户面固定, 并且在相同区域, 安全要求高需求, 与操作系统相关. 应该都是相同的系统 对安全要求不同 C/S 对服务端、客户端都安全都要考虑。 B/S 因没有客户端，所以只注重服务端安全即可。 监控 1、请你说说你使用过得监控软件的各自的特点。 zabbix ：图像化，可以自定义模板，功能强大 Prometheus：支持在多层监控，业务、应用、系统层都可监控，可以集成其他监控，经常与k8S一起用 2、服务器监控有哪些方法 1、利用脚本定时检查服务，系统性能 2、利用第三方监控软件 脚本 1、写一个脚本实现批量添加20个用户，用户名为user1-20，密码为user后面跟5个随机字符 #!/bin/bash #description: useradd for i in seq 1 20 do pwd=$(cat /dev/urandom | head -1 | md5sum | head -c 5) useradd user$i echo \"user$i$pwd\" | passwd --stdin user$i echo user$i user$i$pwd\" >> userinfo.txt done 2、请试着写出一个杀死进程http的shell脚本 pid=`pgrep httpd` for i in $pid do kill -9 $i done 3、.请利用shell开发一个rsync服务的启动停止脚本并通过chkconfig进行开关机管理 说明： A：rsync服务的PID文件路径为：/var/run/rsyncd.pid B：rsync服务的启动命令为：rsync --daemon C：rsync服务的停止命令为：kill -USR2 `cat /var/run/rsyncd.pid` && rm -f /var/run/rsyncd.pid 启动脚本 #!/bin/bash Define variablesRETVAL=0 Pid=/var/run/rsyncd.pid Determine the user to executeif [ $UID -ne $RETVAL ];then echo \"Must be root to run scripts\" exit 1 fi Load the local functions library[ -f /etc/init.d/functions ] && source /etc/init.d/functions Define functionsstart(){ if [ ! -f \"$Pid\" ];then rsync --daemon RETVAL=$? if [ $RETVAL -eq 0 ];then action \"Start rsync service\" /bin/true else action \"Start rsync service\" /bin/false fi else echo \"Rsync is running\" exit 1 } stop(){ fi return $RETVAL if [ -f \"$Pid\" ];then kill -USR2 $(cat $Pid) find /var/run -maxdepth 1 -type f -name \"rsyncd.pid\"|xargs rm -f RETVAL=$? if [ $RETVAL -eq 0 ];then action \"Stop rsync service\" /bin/true else action \"Stop rsync service\" /bin/false fi else echo \"Rsync is not running\" exit 1 fi return $RETVAL } status(){ if [ -f \"$Pid\" ];then echo \"Rsync is running\" else echo \"Rsync is not running\" fi return $RETVAL } Case call functionscase \"$1\" in start) start RETVAL=$? ;; stop) stop RETVAL=$? ;; restart) stop sleep 2 start RETVAL=$? ;; status) status RETVAL=$? ;; *) esac echo \"USAGE:$0 {start|stop|restart|status}\" exit 1 Scripts return valuesexit $RETVAL 4、写一个脚本，实现判断192.168.1.0/24网络里，当前在线的ip有哪些。 #!/bin/bash for ip in `seq 1 255` do { ping -c 1 192.168.1.$ip > /dev/null 2>&1 if [ $? -eq 0 ]; then echo 192.168.1.$ip UP else fi }& done wait echo 192.168.1.$ip DOWN 5、.列举你所熟悉的脚本语言，并选一种脚本语言编写一个脚本解决你所遇到的问题。 shell 分割Tomcat日志， log_path=/opt/tomcat/logs namelog=/opt/tomcat/logs/name_log d=`date +%Y-%m-%d` d7=`date -d'7 day ago' +%Y-%m-%d` cd ${log_path} && cp catalina.out catalina.$d.log echo > catalina.out cd ${namelog} && cp name name.$d.log echo > name rm -rf $log_path/catalina.${d7}.log rm -rf $namelog/name_log/name.${d7}.log 6、写shell实现输出top10的IP地址 #!/bin/bash cat url.log | sort | uniq -c |sort -n -r -k 1 -t ' ' | awk -F '//' '{print $2}' | head -10 > ip10.txt 7、写一个脚本将数据库备份并打包至远程服务器192.169.1.1/backup目录下 #!/bin/bash /opt/mysql/bin/mysqldump -uroot -p***** -R --routines --events --triggers 库名 &gt;/mysqlbackup/库名+日期.sql scp /mysqlbackup/库名+日期.sql 129.169.1.1:/backup 8、你公司中将/var/www/html/data的文件，定期备份到192.168.90.11（centos系统）下 的/var/backup下目录，请用简单的shell实现。 crontab -e scp /var/www/html/data 192.168.90.11/var/backup 9、如何监控某个网站最近1天的访问ip及其访问量，并对单日单个ip访问量超过10000次的ip进行报警 #！/bin/bash cat access.log | sort | uniq -c |sort -n -r -k 1 -t ' ' | awk -F '//' '{print $2}' > ip.txt for i in `cat ip.txt` do if [ i > 10000 ];than echo \"waring ,i> 100000\" > waring.txt done 10、只写一个命令，修改/tmp/input.txt文件内容要求: 删除所有空行 如果一行中包含‘11111’ ，则在前面插入‘AAA’，在后面插入‘BBB’如： 000AAA1111111BBB2222. 1、sed -ri '/^[ \\t]*$/d' /tmp/input.txt 2、sed -ri s/1111/AAA&/;s/1111/&BBB/' /tmp/input.txt 11、在bash shell 中 $0,$1,$?,$#,$*,$@分别代表什么？ $0 脚本名 $1 第一个参数 $* 所有的参数 $@ 所有的参数 $# 参数的个数 $$ 当前进程的PID $! 上一个后台进程的PID $? 上一个命令的返回值 0表示成功 12、正则表达式^d+[^d]+ 能匹配下列哪个字符： 12 dd12s d123 d12d 答：d12d 13、在shell中变量的赋值有四种方法，其中name=12的方法称？ 直接赋值 14、写一个脚本（shell、python）实现nginx日志按天分割，并将前一天的日志进行压缩，总共保留10 天的备份？ #!/bin/bash nginxpid=`/usr/bin/ps aux|grep nginx|grep nginx|awk '/master/{print$2}'` #找出 nginx服务的master进程并取出它的pid accesslog=`/usr/sbin/lsof -p $nginxpid|awk '/access.log/{print $9}'` #找出pid文件的路径 log_path=`/usr/bin/dirname $accesslog` #取出它 的目录 YESTERDAY=$(date -d \"yesterday\" +%Y%m%d) #找出昨 天的日期例如：20190422 new_path=/usr/bin/new if [ ! -d $new_path ];then mkdir $new_path fi #在每天的0点切割日志 mv ${log_path}/access.log ${new_path}/access_${YESTERDAY}.log #将前一天 的日志移到新目录下面 kill -USR1 `ps axu | grep \"nginx: master process\" | grep -v grep | awk '{print $2}'` #发送USR1信号，重新打开日志文件，否则会往mv后的文件写日志 #原因在于：linux系统中，内核是根据文件描述符来找文件的。如果不这样操作导致日志切割失败。 tar -zcf ${new_path}/access_${YESTERDAY}.tar.gz ${new_path}/access_${YESTERDAY}.log #将这个日志压缩 if [ $? != 0 ];then echo \"命令执行错误\";exit 1;fi #压 缩出问题则退出 rm -f ${new_path}/access_${YESTERDAY}.log #没 问题则删除原文件 #总共保留10天的压缩文件，那么就要删除11天前的文件，因为当前时间点还没有压缩文件 find ${new_path} -type f -mtime +11 -exec rm -f {} ; 15、一个bash shell脚本的第一行是什么？ 命令解释器 16、批量检查多个网站地址是否正常？ #!/bin/bash web_array=( http://blog.oldboyedu.com ####多个网站地址 http://blog.etiantian.org http://oldboy.blog.51cto.com http://10.0.0.7 ) while true do for ((i=0;i","categories":["Linux","基础操作"]},{"title":"MySQL数据库备份mysqldump","path":"/2023/09/25/MySQL数据库备份mysqldump/","content":"@TOC 前言MySQL是一个广泛使用的开源关系型数据库管理系统，可用于存储和管理数据。为了保护数据，我们需要定期备份数据库，以便在数据丢失或损坏时可以恢复数据。在本文中，我将介绍如何使用mysqldump命令来备份MySQL数据库。 一、关于备份热备份和冷备份热备份是指在MySQL服务器运行时进行备份，这种备份方式不会中断MySQL服务器的正常运行。备份过程中，MySQL服务器仍然可以读写数据库。这种备份方式比较简单，适合数据量不是很大的情况。 冷备份是指在MySQL服务器停止运行时进行备份，这种备份方式需要将MySQL服务器停止运行一段时间，等待备份完成后再启动MySQL服务器。这种备份方式适合数据量较大的情况，因为备份时间较长，备份过程中MySQL服务器无法读写数据库。 一般来说，MySQL备份建议使用多种备份方式相结合，比如使用热备份进行备份，使用冷备份进行灾备。 MySQL备份种类 完全备份（Full Backup）：包含数据表、索引、触发器、存储过程、视图、数据文件等所有内容。 增量备份（Incremental Backup）：只包含最近一次完全备份之后修改过的数据，可以快速恢复最新的数据。 差异备份（Differential Backup）：与增量备份类似，只包含最近一次完全备份之后修改过的数据，但可以通过两个差异备份之间的差异进行恢复，更加高效。 压缩备份（Compressed Backup）：通过对数据进行压缩，减少备份文件的大小，便于存储和传输。 远程备份（Remote Backup）：通过网络传输数据到远程服务器，可以实现数据的分布式备份和恢复。 磁盘备份（Disk Backup）：将MySQL数据库文件和配置文件备份到磁盘上，可以实现快速恢复数据，但恢复速度相对较慢。 文件备份（File Backup）：将MySQL数据库文件和配置文件备份到文件中，可以通过网络传输到其他服务器进行恢复。 不同的备份种类适用于不同的场景，需要根据实际情况进行选择。 二、mysqldump使用步骤通常情况下， mysqldump 是 MySQL 内置的备份工具，可以用来备份和导出MySQL数据库。该工具通过生成一个包含数据库中所有表和表结构的SQL脚本文件，从而实现了数据备份和导出的功能。该脚本文件可以被用来还原MySQL数据库，或者在不同的MySQL服务器之间进行迁移。 常见参数mysqldump是MySQL的备份工具，可以将MySQL数据库的结构和数据备份到指定的文件中。使用mysqldump备份MySQL数据库非常方便，以下是一些常用的mysqldump命令和选项： mysqldump命令用于备份MySQL数据库，语法如下 1mysqldump [OPTIONS] DATABASE [TABLE [TABLE ...]] &gt; DUMPFILE 其中，DATABASE是要备份的数据库名，TABLE是要备份的表名，多个表名之间用空格分隔，–skip-opt选项可以忽略优化选项，–all-databases选项可以备份所有数据库。 常用选项： * b：备份二进制日志文件。 * h HOST：备份数据库所在主机的主机名或IP地址。 * u USERNAME：备份数据库所用的用户名。 * p PASSWORD：备份数据库所用的密码。 * r：将备份文件复制到指定的位置。 * t：只备份指定的数据表，而不备份数据表的其他信息，例如索引、触发器等。 * n：只备份表结构，而不备份表的数据。 备份完成后，可以使用mysql命令加上用户名和密码连接到备份的数据库，查看备份文件中包含的内容，例如： 1mysql -u USERNAME -p PASSWORD DATABASE 创建备份文件使用以下命令创建一个名为 backup.sql 的备份文件： 1mysqldump -u root -p your_database_name &gt; backup.sql 其中，root 是 MySQL 的超级用户，your\\_database\\_name 是要备份的数据库名称。\\&gt; backup.sql 是将备份文件写入 backup.sql 文件中。 执行备份命令如果你需要备份多个数据库或者多个表，可以在 mysqldump 命令中指定相应的选项。以下是备份多个数据库的命令示例： 1mysqldump -u root -p -B your_database_name1 your_database_name2 &gt; backup.sql 其中，\\-B 选项表示备份多个数据库。 检查备份文件备份完成后，可以在 backup.sql 文件中查看备份文件的内容。 恢复数据使用以下命令恢复备份文件中的数据： 1mysql -u root -p your_database_name &lt; backup.sql 其中，root 是 MySQL 的超级用户，your\\_database\\_name 是要恢复的数据库名称。&lt; backup.sql 是从备份文件中读取数据。 注意：在执行恢复命令前，一定要确保已经创建了相应的数据库和表。以上就是使用 mysqldump 进行数据备份和恢复的基本教程。 mysqldump –help123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355[root@mysql5_7 ~]# mysqldump --helpmysqldump Ver 10.13 Distrib 5.7.43, for Linux (x86_64)Copyright (c) 2000, 2023, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Dumping structure and contents of MySQL databases and tables.Usage: mysqldump [OPTIONS] database [tables]OR mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]OR mysqldump [OPTIONS] --all-databases [OPTIONS]Default options are read from the following files in the given order:/etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnfThe following groups are read: mysqldump clientThe following options may be given as the first argument:--print-defaults Print the program argument list and exit.--no-defaults Don&#x27;t read default options from any option file, except for login file.--defaults-file=# Only read default options from the given file #.--defaults-extra-file=# Read this file after the global files are read.--defaults-group-suffix=# Also read groups with concat(group, suffix)--login-path=# Read this path from the login file. -A, --all-databases Dump all the databases. This will be same as --databases with all databases selected. -Y, --all-tablespaces Dump all the tablespaces. -y, --no-tablespaces Do not dump any tablespace information. --add-drop-database Add a DROP DATABASE before each create. --add-drop-table Add a DROP TABLE before each create. (Defaults to on; use --skip-add-drop-table to disable.) --add-drop-trigger Add a DROP TRIGGER before each create. --add-locks Add locks around INSERT statements. (Defaults to on; use --skip-add-locks to disable.) --allow-keywords Allow creation of column names that are keywords. --apply-slave-statements Adds &#x27;STOP SLAVE&#x27; prior to &#x27;CHANGE MASTER&#x27; and &#x27;START SLAVE&#x27; to bottom of dump. --bind-address=name IP address to bind to. --character-sets-dir=name Directory for character set files. -i, --comments Write additional information. (Defaults to on; use --skip-comments to disable.) --compatible=name Change the dump to be compatible with a given mode. By default tables are dumped in a format optimized for MySQL. Legal modes are: ansi, mysql323, mysql40, postgresql, oracle, mssql, db2, maxdb, no_key_options, no_table_options, no_field_options. One can use several modes separated by commas. Note: Requires MySQL server version 4.1.0 or higher. This option is ignored with earlier server versions. --compact Give less verbose output (useful for debugging). Disables structure comments and header/footer constructs. Enables options --skip-add-drop-table --skip-add-locks --skip-comments --skip-disable-keys --skip-set-charset. -c, --complete-insert Use complete insert statements. -C, --compress Use compression in server/client protocol. -a, --create-options Include all MySQL specific create options. (Defaults to on; use --skip-create-options to disable.) -B, --databases Dump several databases. Note the difference in usage; in this case no tables are given. All name arguments are regarded as database names. &#x27;USE db_name;&#x27; will be included in the output. -#, --debug[=#] This is a non-debug version. Catch this and exit. --debug-check This is a non-debug version. Catch this and exit. --debug-info This is a non-debug version. Catch this and exit. --default-character-set=name Set the default character set. --delete-master-logs Delete logs on master after backup. This automatically enables --master-data. -K, --disable-keys &#x27;/*!40000 ALTER TABLE tb_name DISABLE KEYS */; and &#x27;/*!40000 ALTER TABLE tb_name ENABLE KEYS */; will be put in the output. (Defaults to on; use --skip-disable-keys to disable.) --dump-slave[=#] This causes the binary log position and filename of the master to be appended to the dumped data output. Setting the value to 1, will printit as a CHANGE MASTER command in the dumped data output; if equal to 2, that command will be prefixed with a comment symbol. This option will turn --lock-all-tables on, unless --single-transaction is specified too (in which case a global read lock is only taken a short time at the beginning of the dump - don&#x27;t forget to read about --single-transaction below). In all cases any action on logs will happen at the exact moment of the dump.Option automatically turns --lock-tables off. -E, --events Dump events. -e, --extended-insert Use multiple-row INSERT syntax that include several VALUES lists. (Defaults to on; use --skip-extended-insert to disable.) --fields-terminated-by=name Fields in the output file are terminated by the given string. --fields-enclosed-by=name Fields in the output file are enclosed by the given character. --fields-optionally-enclosed-by=name Fields in the output file are optionally enclosed by the given character. --fields-escaped-by=name Fields in the output file are escaped by the given character. -F, --flush-logs Flush logs file in server before starting dump. Note that if you dump many databases at once (using the option --databases= or --all-databases), the logs will be flushed for each database dumped. The exception is when using --lock-all-tables or --master-data: in this case the logs will be flushed only once, corresponding to the moment all tables are locked. So if you want your dump and the log flush to happen at the same exact moment you should use --lock-all-tables or --master-data with --flush-logs. --flush-privileges Emit a FLUSH PRIVILEGES statement after dumping the mysql database. This option should be used any time the dump contains the mysql database and any other database that depends on the data in the mysql database for proper restore. -f, --force Continue even if we get an SQL error. -?, --help Display this help message and exit. --hex-blob Dump binary strings (BINARY, VARBINARY, BLOB) in hexadecimal format. -h, --host=name Connect to host. --ignore-error=name A comma-separated list of error numbers to be ignored if encountered during dump. --ignore-table=name Do not dump the specified table. To specify more than one table to ignore, use the directive multiple times, once for each table. Each table must be specified with both database and table names, e.g., --ignore-table=database.table. --include-master-host-port Adds &#x27;MASTER_HOST=&lt;host&gt;, MASTER_PORT=&lt;port&gt;&#x27; to &#x27;CHANGE MASTER TO..&#x27; in dump produced with --dump-slave. --insert-ignore Insert rows with INSERT IGNORE. --lines-terminated-by=name Lines in the output file are terminated by the given string. -x, --lock-all-tables Locks all tables across all databases. This is achieved by taking a global read lock for the duration of the whole dump. Automatically turns --single-transaction and --lock-tables off. -l, --lock-tables Lock all tables for read. (Defaults to on; use --skip-lock-tables to disable.) --log-error=name Append warnings and errors to given file. --master-data[=#] This causes the binary log position and filename to be appended to the output. If equal to 1, will print it as a CHANGE MASTER command; if equal to 2, that command will be prefixed with a comment symbol. This option will turn --lock-all-tables on, unless --single-transaction is specified too (in which case a global read lock is only taken a short time at the beginning of the dump; don&#x27;t forget to read about --single-transaction below). In all cases, any action on logs will happen at the exact moment of the dump. Option automatically turns --lock-tables off. --max-allowed-packet=# The maximum packet length to send to or receive from server. --net-buffer-length=# The buffer size for TCP/IP and socket communication. --no-autocommit Wrap tables with autocommit/commit statements. -n, --no-create-db Suppress the CREATE DATABASE ... IF EXISTS statement that normally is output for each dumped database if --all-databases or --databases is given. -t, --no-create-info Don&#x27;t write table creation info. -d, --no-data No row information. -N, --no-set-names Same as --skip-set-charset. --opt Same as --add-drop-table, --add-locks, --create-options, --quick, --extended-insert, --lock-tables, --set-charset, and --disable-keys. Enabled by default, disable with --skip-opt. --order-by-primary Sorts each table&#x27;s rows by primary key, or first unique key, if such a key exists. Useful when dumping a MyISAM table to be loaded into an InnoDB table, but will make the dump itself take considerably longer. -p, --password[=name] Password to use when connecting to server. If password is not given it&#x27;s solicited on the tty. -P, --port=# Port number to use for connection. --protocol=name The protocol to use for connection (tcp, socket, pipe, memory). -q, --quick Don&#x27;t buffer query, dump directly to stdout. (Defaults to on; use --skip-quick to disable.) -Q, --quote-names Quote table and column names with backticks (`). (Defaults to on; use --skip-quote-names to disable.) --replace Use REPLACE INTO instead of INSERT INTO. -r, --result-file=name Direct output to a given file. This option should be used in systems (e.g., DOS, Windows) that use carriage-return linefeed pairs (\\r ) to separate text lines. This option ensures that only a single newline is used. -R, --routines Dump stored routines (functions and procedures). --set-charset Add &#x27;SET NAMES default_character_set&#x27; to the output. (Defaults to on; use --skip-set-charset to disable.) --set-gtid-purged[=name] Add &#x27;SET @@GLOBAL.GTID_PURGED&#x27; to the output. Possible values for this option are ON, OFF and AUTO. If ON is used and GTIDs are not enabled on the server, an error is generated. If OFF is used, this option does nothing. If AUTO is used and GTIDs are enabled on the server, &#x27;SET @@GLOBAL.GTID_PURGED&#x27; is added to the output. If GTIDs are disabled, AUTO does nothing. If no value is supplied then the default (AUTO) value will be considered. --single-transaction Creates a consistent snapshot by dumping all tables in a single transaction. Works ONLY for tables stored in storage engines which support multiversioning (currently only InnoDB does); the dump is NOT guaranteed to be consistent for other storage engines. While a --single-transaction dump is in process, to ensure a valid dump file (correct table contents and binary log position), no other connection should use the following statements: ALTER TABLE, DROP TABLE, RENAME TABLE, TRUNCATE TABLE, as consistent snapshot is not isolated from them. Option automatically turns off --lock-tables. --dump-date Put a dump date to the end of the output. (Defaults to on; use --skip-dump-date to disable.) --skip-mysql-schema Skip adding DROP DATABASE for mysql schema. --skip-opt Disable --opt. Disables --add-drop-table, --add-locks, --create-options, --quick, --extended-insert, --lock-tables, --set-charset, and --disable-keys. -S, --socket=name The socket file to use for connection. --secure-auth Refuse client connecting to server if it uses old (pre-4.1.1) protocol. Deprecated. Always TRUE --ssl-mode=name SSL connection mode. --ssl Deprecated. Use --ssl-mode instead. (Defaults to on; use --skip-ssl to disable.) --ssl-verify-server-cert Deprecated. Use --ssl-mode=VERIFY_IDENTITY instead. --ssl-ca=name CA file in PEM format. --ssl-capath=name CA directory. --ssl-cert=name X509 cert in PEM format. --ssl-cipher=name SSL cipher to use. --ssl-key=name X509 key in PEM format. --ssl-crl=name Certificate revocation list. --ssl-crlpath=name Certificate revocation list path. --tls-version=name TLS version to use, permitted values are: TLSv1, TLSv1.1, TLSv1.2 --server-public-key-path=name File path to the server public RSA key in PEM format. --get-server-public-key Get server public key -T, --tab=name Create tab-separated textfile for each table to given path. (Create .sql and .txt files.) NOTE: This only works if mysqldump is run on the same machine as the mysqld server. --tables Overrides option --databases (-B). --triggers Dump triggers for each dumped table. (Defaults to on; use --skip-triggers to disable.) --tz-utc SET TIME_ZONE=&#x27;+00:00&#x27; at top of dump to allow dumping of TIMESTAMP data when a server has data in different time zones or data is being moved between servers with different time zones. (Defaults to on; use --skip-tz-utc to disable.) -u, --user=name User for login if not current user. -v, --verbose Print info about the various stages. -V, --version Output version information and exit. -w, --where=name Dump only selected records. Quotes are mandatory. -X, --xml Dump a database as well formed XML. --plugin-dir=name Directory for client-side plugins. --default-auth=name Default authentication client-side plugin to use. --enable-cleartext-plugin Enable/disable the clear text authentication plugin.Variables (--variable-name=value)and boolean options &#123;FALSE|TRUE&#125; Value (after reading options)--------------------------------- ----------------------------------------all-databases FALSEall-tablespaces FALSEno-tablespaces FALSEadd-drop-database FALSEadd-drop-table TRUEadd-drop-trigger FALSEadd-locks TRUEallow-keywords FALSEapply-slave-statements FALSEbind-address (No default value)character-sets-dir (No default value)comments TRUEcompatible (No default value)compact FALSEcomplete-insert FALSEcompress FALSEcreate-options TRUEdatabases FALSEdefault-character-set utf8delete-master-logs FALSEdisable-keys TRUEdump-slave 0events FALSEextended-insert TRUEfields-terminated-by (No default value)fields-enclosed-by (No default value)fields-optionally-enclosed-by (No default value)fields-escaped-by (No default value)flush-logs FALSEflush-privileges FALSEforce FALSEhex-blob FALSEhost (No default value)ignore-error (No default value)include-master-host-port FALSEinsert-ignore FALSElines-terminated-by (No default value)lock-all-tables FALSElock-tables TRUElog-error (No default value)master-data 0max-allowed-packet 25165824net-buffer-length 1046528no-autocommit FALSEno-create-db FALSEno-create-info FALSEno-data FALSEorder-by-primary FALSEport 0quick TRUEquote-names TRUEreplace FALSEroutines FALSEset-charset TRUEsingle-transaction FALSEdump-date TRUEskip-mysql-schema FALSEsocket (No default value)secure-auth TRUEssl TRUEssl-verify-server-cert FALSEssl-ca (No default value)ssl-capath (No default value)ssl-cert (No default value)ssl-cipher (No default value)ssl-key (No default value)ssl-crl (No default value)ssl-crlpath (No default value)tls-version (No default value)server-public-key-path (No default value)get-server-public-key FALSEtab (No default value)triggers TRUEtz-utc TRUEuser (No default value)verbose FALSEwhere (No default value)plugin-dir (No default value)default-auth (No default value)enable-cleartext-plugin FALSE 总结本文介绍了使用mysqldump命令备份MySQL数据库的方法和步骤。mysqldump是MySQL的备份工具，可以备份整个MySQL数据库或者单个表。备份种类包括完全备份、增量备份、差异备份、压缩备份、远程备份、磁盘备份和文件备份。文章详细介绍了安装mysqldump、创建备份文件、执行备份命令、检查备份文件和恢复数据的步骤。备份完成后，可以查看备份文件的内容，并使用mysql命令恢复备份文件中的数据。文章最后总结了使用mysqldump备份和恢复MySQL数据库的基本教程。"},{"title":"Linux下命令find命令文件查找","path":"/2023/09/25/Linux下命令find命令文件查找/","content":"我自风情万种，何必与世相争；我自心清如水，又何须为烦恼所困？ @TOC 前言find命令是Linux系统中的一个常用命令，用于在指定的目录中查找符合条件的文件或目录。 一、find 命令使用介绍find 命令是 Linux 和 Unix 系统中常用的文件查找工具。它可以在指定目录及其子目录中查找符合指定条件的文件或目录，并将结果输出到终端。find 命令的语法如下： find [path] [expression] 其中： path：查找的起始目录，可以是绝对路径或相对路径。如果不指定 path，则默认从当前目录开始查找。 expression：用来指定查找的条件，可以是一些简单的逻辑运算符（如 \\-name, \\-type, \\-size, \\-mtime, \\-user, \\-group 等），也可以是一些复杂的文件名匹配模式（如通配符 \\*、?、\\[ \\] 等）。 \\-name：指定文件名模式，如 \\*.txt 表示查找所有以 .txt 结尾的文件。 \\-type：指定文件类型，如 \\-type f 表示查找所有文件，\\-type d 表示查找所有目录。 \\-size：指定文件大小范围，如 \\-size +10M 表示查找所有大小大于 10M 的文件。 \\-mtime：指定文件修改时间范围，如 \\-mtime -7 表示查找所有最近 7 天内修改过的文件。 \\-user：指定文件所有者，如 \\-user haoze表示查找所有所有者为 haoze 的文件。 \\-group：指定文件所属组，如 \\-group example 表示查找所有所属组为 example 的文件。 以下是一些示例： .代表的是相对路径当前目录，相对路径与绝对的路径的区别可以理解为在 Linux中凡是以&#x2F;开头的目录均为绝对路径 查找当前目录及其子目录中所有以 .txt 结尾的文件：1find . -name &quot;*.txt&quot; 查找当前目录及其子目录中所有文件大小大于 1M 的文件：1find . -type f -size +1M 查找当前目录及其子目录中所有修改时间在最近 7 天内的文件： 1find . -type f -mtime -7 查找当前目录及其子目录中所有所属组为 example 的文件： 1find . -group example 以上为 find 命令的基本用法，还有很多高级用法可以查阅官方文档了解。 二、Linux文件权限4位数含义 普通权限： image RWX对应的权限是： r:4 w:2 x:1， 所以777就代表 rwxrwxrwx 12345678910[root@server /]# ls -l | head -5total 32lrwxrwxrwx. 1 root root 7 Jul 2 14:51 bin -&gt; usr/bin#777权限dr-xr-xr-x. 5 root root 4096 Jul 2 14:53 boot#555权限drwxr-xr-x 20 root root 3240 Aug 9 16:08 dev#755权限drwxr-xr-x. 77 root root 8192 Aug 9 16:08 etc#755权限 高级权限 suid,sgid,sticky 0777最前面的0，代表高级权限suid,sgid,sticky分为属主权限、属组权限、其他人权限suid:0变为4、guid:0变为2、sticky:0变为1suid, sgid和sticky是Linux系统中用于限制文件和目录的用户和组的三种权限。 suid权限 suid权限是指文件或目录可以使其他用户以执行命令的方式来使用它们。当文件具有suid权限时，文件的所有者可以将文件或目录赋予其他用户，这些用户可以以root用户的身份来执行该文件或目录。 suid权限可以通过在文件上运行chmod +s命令来设置。例如，下面的命令将file.txt文件设置为具有suid权限： 123456[root@mysql5_7 ~]# ls -l file.txt-rw-r--r-- 1 root root 0 Aug 9 20:33 file.txt #初始权限[root@mysql5_7 ~]# chmod u+s file.txt[root@mysql5_7 ~]# ll file.txt-rwSr--r-- 1 root root 0 Aug 9 20:33 file.txt #可以看到多了个s权限 [root@mysql5_7 ~]# chmod u-s file.txt #取消权限 sgid权限 sgid权限是指文件或目录的所有者和组可以使用它们。如果没有写权限, 则这个目录下的所有文件都不能被删除, 同时也不能添加新的文件. 如果希望用户能够添加文件但同时不能删除文件 sgid权限可以通过在文件上运行chmod +s命令来设置。例如，下面的命令将file.txt文件设置为具有sgid权限： 1234[root@mysql5_7 ~]# chmod g+s file.txt[root@mysql5_7 ~]# ll file.txt-rw-r-Sr-- 1 root root 0 Aug 9 20:33 file.txt[root@mysql5_7 ~]# chmod g-s file.txt sticky权限 sticky权限是指只有文件或目录的拥有者和组用户才能进行写操作。当文件或目录具有sticky权限时，只有文件或目录的拥有者和组用户才能在文件或目录上进行写操作。其他用户可以读取和执行该文件或目录，但无法进行写操作。 设置该位后， 就算用户对目录具有写权限，也不能删除该文件。 sticky权限可以通过在文件上运行chmod +t命令来设置。例如，下面的命令将file.txt文件设置为具有sticky权限： 1234[root@mysql5_7 ~]# chmod o+t file.txt[root@mysql5_7 ~]# ll file.txt-rw-r--r-T 1 root root 0 Aug 9 20:33 file.txt[root@mysql5_7 ~]# chmod o-t file.txt 总结本文介绍了Linux系统中常用的find命令的使用介绍以及高级用法，同时解释了Linux文件权限4位数的含义，包括普通权限、高级权限suid、sgid和sticky，以及如何设置它们。find命令可以在指定目录及其子目录中查找符合指定条件的文件或目录，并将结果输出到终端。通过对命令语法和常用示例的介绍，可以更好地了解和运用find命令。","categories":["Linux","基础操作"]},{"title":"Linux 磁盘挂载","path":"/2023/09/25/Linux 磁盘挂载方式/","content":"人生自是有情痴，此恨不关风与月。 @[TOC](Linux 磁盘挂载) 一、Linux 磁盘自动挂载首先为虚拟机添加几块磁盘作为实验备用 在这里插入图片描述 添加磁盘后使用lsblk命令进行查看 [root@disk ~]# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 60G 0 disk ├─sda1 8:1 0 500M 0 part /boot └─sda2 8:2 0 59.5G 0 part ├─centos-root 253:0 0 38.6G 0 lvm / ├─centos-swap 253:1 0 2G 0 lvm [SWAP] └─centos-home 253:2 0 18.9G 0 lvm /home sr0 11:0 1 4G 0 rom [root@disk ~]# 可以看到磁盘未加载，使用万能的重启大法reboot,init 6,shutdown -r now等，重启虚拟机即可,重启完毕后可以看到新添加的硬盘已经加载好了 [root@disk ~]# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 60G 0 disk ├─sda1 8:1 0 500M 0 part /boot └─sda2 8:2 0 59.5G 0 part ├─centos-root 253:0 0 38.6G 0 lvm / ├─centos-swap 253:1 0 2G 0 lvm [SWAP] └─centos-home 253:2 0 18.9G 0 lvm /home sdb 8:16 0 60G 0 disk sdc 8:32 0 60G 0 disk sdd 8:48 0 60G 0 disk sr0 11:0 1 1024M 0 rom 使用 fdisk进行分区 [root@disk ~]# fdisk /dev/sdb Welcome to fdisk (util-linux 2.23.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Device does not contain a recognized partition table Building a new DOS disklabel with disk identifier 0x1d66e12e. Command (m for help): p Disk /dev/sdb: 64.4 GB, 64424509440 bytes, 125829120 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x1d66e12e Device Boot Start End Blocks Id System Command (m for help): n Partition type: p primary (0 primary, 0 extended, 4 free) e extended Select (default p): p Partition number (1-4, default 1): First sector (2048-125829119, default 2048): Using default value 2048 Last sector, +sectors or +size&#123;K,M,G&#125; (2048-125829119, default 125829119): Using default value 125829119 Partition 1 of type Linux and of size 60 GiB is set Command (m for help): p Disk /dev/sdb: 64.4 GB, 64424509440 bytes, 125829120 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x1d66e12e Device Boot Start End Blocks Id System /dev/sdb1 2048 125829119 62913536 83 Linux Command (m for help): w The partition table has been altered! Calling ioctl() to re-read partition table. Syncing disks. 根目录下创建了一个名为&#x2F;mnt&#x2F;sdb的目录，并对&#x2F;dev&#x2F;sdb1进行了ext4文件系统格式化。 文件系统类型：ext4 [root@disk ~]# mkdir /mnt/sdb [root@disk ~]# mkfs.ext4 /dev/sdb1 mke2fs 1.42.9 (28-Dec-2013) Filesystem label= OS type: Linux Block size=4096 (log=2) Fragment size=4096 (log=2) Stride=0 blocks, Stripe width=0 blocks 3932160 inodes, 15728384 blocks 786419 blocks (5.00%) reserved for the super user First data block=0 Maximum filesystem blocks=2164260864 480 block groups 32768 blocks per group, 32768 fragments per group 8192 inodes per group Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424 Allocating group tables: done Writing inode tables: done Creating journal (32768 blocks): done Writing superblocks and filesystem accounting information: done 配置&#x2F;etc&#x2F;fstab文件实现开机自动挂载 在配置文件/etc/fstab后追加/dev/sdb1 /mnt/sdb ext4 defaults 0 0 [root@disk ~]# vim /etc/fstab # # /etc/fstab # Created by anaconda on Sun Jul 2 14:40:36 2023 # # Accessible filesystems, by reference, are maintained under &#39;/dev/disk&#39; # See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info # /dev/mapper/centos-root / xfs defaults 0 0 UUID=8f90bf6f-fc6f-47e6-938e-d53602078619 /boot xfs defaults 0 0 /dev/mapper/centos-home /home xfs defaults 0 0 /dev/mapper/centos-swap swap swap defaults 0 0 /dev/sdb1 /mnt/sdb ext4 defaults 0 0 参数解释： 第1列:挂载设备 (1)/dev/sda5 (2)UUID=设备的uuid rhel6/7的默认写法 同一台机器内唯一的一个设备标识 第2列:挂载点 第3列:文件系统类型 第4列:文件系统属性 第5列:是否对文件系统进行磁带备份：0 不备份 第6列:是否检查文件系统：0 不检查 使用 mount 命令挂载 [root@disk ~]# mount /dev/sdb1 /mnt/sdb/ [root@disk ~]# mount -a #开机自动挂载 二、根目录扩容首先，使用lsblk命令查看当前系统的磁盘和分区情况。 [root@server /]# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 20G 0 disk ├─sda1 8:1 0 1G 0 part /boot └─sda2 8:2 0 19G 0 part ├─centos-root 253:0 0 17G 0 lvm / └─centos-swap 253:1 0 2G 0 lvm [SWAP] sdb 8:16 0 20G 0 disk ├─sdb1 8:17 0 5G 0 part /mnt/sdb1 ├─sdb2 8:18 0 5G 0 part /mnt/sdb2 ├─sdb3 8:19 0 5G 0 part /mnt/sdb3 ├─sdb4 8:20 0 1K 0 part └─sdb5 8:21 0 5G 0 part /mnt/sdb5 sdc 8:32 0 20G 0 disk └─sdc1 8:33 0 2G 0 part [SWAP] sdd 8:48 0 20G 0 disk sde 8:64 0 20G 0 disk └─vg2-lv2 253:2 0 26G 0 lvm /mnt/lv2 sdf 8:80 0 20G 0 disk └─vg1-lv1 253:3 0 1G 0 lvm sdg 8:96 0 20G 0 disk └─vg2-lv2 253:2 0 26G 0 lvm /mnt/lv2 sdh 8:112 0 20G 0 disk sr0 11:0 1 4.4G 0 rom 确认需要扩容的根分区所在的逻辑卷名称和卷组名称。根据示例中的输出，根分区的逻辑卷名称是centos-root，卷组名称是centos。 [root@server /]# lvs LV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convert root centos -wi-ao---- &lt;17.00g swap centos -wi-ao---- 2.00g lv1 vg1 -wi-a----- 1.00g lv2 vg2 -wi-ao---- 26.00g [root@server /]# pvcreate /dev/sdd Physical volume &quot;/dev/sdd&quot; successfully created. [root@server /]# vgextend centos /dev/sdd Volume group &quot;centos&quot; successfully extended 使用lvextend命令对逻辑卷进行扩容。例如，要将根分区扩容15GB，可以执行以下命令：lvextend -L +15G /dev/centos/root [root@server /]# vgs VG #PV #LV #SN Attr VSize VFree centos 2 2 0 wz--n- 38.99g &lt;20.00g vg1 1 1 0 wz--n- &lt;20.00g &lt;19.00g vg2 2 1 0 wz--n- 39.99g 13.99g [root@server /]# lvextend -L +15G /dev/centos/root Size of logical volume centos/root changed from &lt;17.00 GiB (4351 extents) to &lt;32.00 GiB (8191 extents). Logical volume centos/root successfully resized. 扩容完成后，使用df -Th命令检查根分区的大小是否已经扩容。 [root@server /]# df -Th Filesystem Type Size Used Avail Use% Mounted on devtmpfs devtmpfs 974M 0 974M 0% /dev tmpfs tmpfs 991M 0 991M 0% /dev/shm tmpfs tmpfs 991M 11M 980M 2% /run tmpfs tmpfs 991M 0 991M 0% /sys/fs/cgroup /dev/mapper/centos-root xfs 17G 5.7G 12G 34% / /dev/sdb3 ext4 4.8G 20M 4.6G 1% /mnt/sdb3 /dev/sdb1 ext4 4.8G 20M 4.6G 1% /mnt/sdb1 /dev/sdb2 ext4 4.8G 20M 4.6G 1% /mnt/sdb2 /dev/sdb5 ext4 4.8G 20M 4.6G 1% /mnt/sdb5 /dev/sda1 xfs 1014M 213M 802M 21% /boot tmpfs tmpfs 199M 12K 199M 1% /run/user/42 tmpfs tmpfs 199M 0 199M 0% /run/user/0 /dev/mapper/vg2-lv2 ext4 26G 45M 25G 1% /mnt/lv2 如果根分区是XFS文件系统，还需要执行xfs_growfs命令来调整文件系统大小。例如，执行以下命令：xfs_growfs /dev/centos/root [root@server /]# xfs_growfs /dev/centos/root meta-data=/dev/mapper/centos-root isize=512 agcount=4, agsize=1113856 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=0 spinodes=0 data = bsize=4096 blocks=4455424, imaxpct=25 = sunit=0 swidth=0 blks naming =version 2 bsize=4096 ascii-ci=0 ftype=1 log =internal bsize=4096 blocks=2560, version=2 = sectsz=512 sunit=0 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 data blocks changed from 4455424 to 8387584 使用df -Th命令再次检查根分区的大小，确保扩容操作已成功完成。 [root@server /]# df -Th Filesystem Type Size Used Avail Use% Mounted on devtmpfs devtmpfs 974M 0 974M 0% /dev tmpfs tmpfs 991M 0 991M 0% /dev/shm tmpfs tmpfs 991M 11M 980M 2% /run tmpfs tmpfs 991M 0 991M 0% /sys/fs/cgroup /dev/mapper/centos-root xfs 32G 5.7G 27G 18% / /dev/sdb3 ext4 4.8G 20M 4.6G 1% /mnt/sdb3 /dev/sdb1 ext4 4.8G 20M 4.6G 1% /mnt/sdb1 /dev/sdb2 ext4 4.8G 20M 4.6G 1% /mnt/sdb2 /dev/sdb5 ext4 4.8G 20M 4.6G 1% /mnt/sdb5 /dev/sda1 xfs 1014M 213M 802M 21% /boot tmpfs tmpfs 199M 12K 199M 1% /run/user/42 tmpfs tmpfs 199M 0 199M 0% /run/user/0 /dev/mapper/vg2-lv2 ext4 26G 45M 25G 1% /mnt/lv2 三、添加交换分区使用dd工具将/dev/zero设备中的内容写入到/mnt/swap.iso文件中，写入的块大小为1GB，总共写入1个块。 这个命令的目的是创建一个1GB大小的名为swap.iso的文件，并将其写入到/mnt目录下。/dev/zero是一个特殊的文件，读取它会返回无限的空字节。通过将其内容写入到文件中，相当于创建了一个全是0的文件。 [root@disk ~]# dd if=/dev/zero of=/mnt/swap.iso bs=1G count=1 1+0 records in 1+0 records out 1073741824 bytes (1.1 GB) copied, 12.4315 s, 86.4 MB/s 通常情况下，这样的操作是为了创建一个临时的交换文件（swap file），用于作为交换分区（swap partition）的替代品，用于虚拟内存的扩展。 [root@disk ~]# mkswap /mnt/swap.iso Setting up swapspace version 1, size = 1048572 KiB no label, UUID=084d2529-f7ac-49c1-9d07-2ad6da7410df [root@disk ~]# vim /etc/fstab /mnt/swap.iso swap swap defaults 0 0 [root@disk ~]# swapon -a swapon: /mnt/swap.iso: insecure permissions 0644, 0600 suggested. #这个警告是由于你的交换文件（swap file）的权限设置被认为不安全导致的。默认情况下，建议将交换文件设置为 0600 权限。 要更改交换文件的权限，你可以使用以下命令： [root@disk ~]# chmod 0600 /mnt/swap.iso #这将设置交换文件的权限为 0600，只允许所有者读取和写入，而禁止其他用户的访问。这样设置后，再次运行 swapon 命令应该就不会再出现不安全权限的警告了 [root@disk ~]# swapon -a [root@disk ~]# swapon -s Filename Type Size Used Priority /dev/dm-1 partition 2097148 0 -2 /mnt/swap.iso file 1048572 0 -3 [root@disk ~]# 到此挂载完成，在实际使用中使用交换分区，最好使用专门的分区，而不是一个文件。 总结本文介绍了Linux磁盘挂载的基本操作和配置方法，包括虚拟机添加磁盘、分区格式化、配置fstab文件、开机自动挂载，根目录扩容和添加交换分区等。文章详细介绍了每个步骤的具体操作和注意事项。","categories":["Linux","基础操作"]},{"title":"Linux中/etc/issue、/etc/motd文件","path":"/2023/09/25/Linux中motd文件/","content":"@TOC 前言在Linux操作系统中，/etc/issue和/etc/motd文件都是系统管理员可以使用来显示系统信息和欢迎信息的关键文件。这些文件通常位于&#x2F;etc目录中，是用户在登录时第一个看到的内容。&#x2F;etc&#x2F;issue文件提供了一些基本的系统信息，例如操作系统名称、版本号、内核版本等。而&#x2F;etc&#x2F;motd文件则通常包含了一些系统管理员可以添加的欢迎信息、系统安全提示或者重要公告等。这些文件对于系统的安全性、稳定性和可用性都有很大的影响，因此系统管理员需要对它们进行适当的配置和维护。 登录前欢迎语&#x2F;etc&#x2F;issue文件用来显示Linux系统的基本信息，例如发行版本、内核版本、安装日期等。当用户登录到Linux系统时，该文件将被用来显示欢迎信息。 实验 [root@mysql5_7 ~]# vim /etc/issue \\S Kernel \\r on an \\m \\d &lt;Welcome to Mysql.server&gt; :wq #保存退出 测试，这个需要系统登录看，用远程工具看不到 image 以下是&#x2F;etc&#x2F;issue文件的一些常见选项说明： 12345678910111213141516171819 ：换行符，用于在欢迎信息中添加新行。\\l：显示本地终端设备名称。\\m：显示计算机的硬件架构。\\s：显示操作系统的名称。\\r：显示内核的版本号。\\t：显示当前时间。\\u：显示当前用户名。\\v：显示操作系统的发行版本号。\\\\：显示反斜杠字符。其他自定义文本：可以在文件中添加其他自定义文本或标记。 使用这些选项，你可以根据需要定制并个性化系统登录时的欢迎信息。例如，可以使用\\s和\\v选项来显示操作系统的名称和发行版本号，\\l选项来显示本地终端设备名称，以及\\t选项来显示当前时间等。 登录后欢迎语&#x2F;etc&#x2F;motd文件用来显示Linux系统的欢迎信息。当用户第一次登录到Linux系统时，该文件将被用来显示欢迎信息。 实验 [root@mysql5_7 ~]# vim /etc/motd &quot;Welcome to MySql.server &quot; :wq #保存退出 测试，可以看到成功了 image 总结这篇文章讨论了Linux系统中&#x2F;etc&#x2F;issue和&#x2F;etc&#x2F;motd文件的作用。&#x2F;etc&#x2F;issue文件用来显示Linux系统的基本信息，例如发行版本、内核版本和安装日期等，在用户登录前会显示欢迎信息。&#x2F;etc&#x2F;motd文件则用来显示Linux系统的欢迎信息，在用户第一次登录后会显示该文件中的内容。","categories":["Linux","基础操作"]},{"title":"Linux文件权限策略setfacl命令","path":"/2023/09/25/Linux文件权限策略setfacl命令/","content":"“春风得意马蹄疾，一日看尽长安花。” ——《登高》 杜甫 @toc 前言Linux的文件权限策略使用setfacl命令来管理的。setfacl命令允许用户在文件和目录上添加、删除和修改权限。它可以根据用户、组、用户组和其他条件来定义文件和目录的权限。 命令语法setfacl命令的语法如下： 1[root@mysql5_7 ~]# setfacl -m user:username permissions file/directory 其中，-m选项用于添加或修改权限，user:username表示要授予权限的用户名，permissions表示要授予或修改的权限。 例如，如果要授予用户 test读、写和执行权限，可以使用以下命令： 1setfacl -m user:test:rwx file.txt 要列出当前文件和目录的所有权限，可以使用 getfacl 命令： 1234567[root@mysql5_7 ~]# getfacl file.txt# file: file.txt# owner: root# group: rootuser::rw-group::r--other::r-- 这将列出file.txt文件的所有权限，并将它们打印到终端上。 操作案例创建了一个名为test的用户。 1[root@mysql5_7 ~]# useradd test 使用getfacl命令查看file.txt文件的ACL权限。 1234567[root@mysql5_7 ~]# getfacl file.txt# file: file.txt# owner: root# group: rootuser::rw-group::r--other::r-- 使用setfacl命令将test用户添加到file.txt文件的ACL权限中，并赋予读写权限。 1[root@mysql5_7 ~]# setfacl -m user:test:rw file.txt 使用echo命令并通过管道方式将密码”123456”传递给passwd命令，将test用户的密码更改为”123456”。 123[root@mysql5_7 ~]# echo &quot;123456&quot; | passwd --stdin testChanging password for user test.passwd: all authentication tokens updated successfully. 使用ls -l命令查看file.txt文件的详细权限信息。 12[root@mysql5_7 ~]# ls -l file.txt-rw-rw-r--+ 1 root root 0 Aug 9 20:33 file.txt 使用chmod命令将file.txt文件的权限修改为只有root用户有访问权限。 12[root@mysql5_7 ~]# chmod 000 file.txt 使用ls -l命令再次查看file.txt文件的详细权限信息。 12[root@mysql5_7 ~]# ls -l file.txt----------+ 1 root root 0 Aug 9 20:33 file.txt 使用su命令切换到test用户。 123[root@mysql5_7 ~]# su test[test@mysql5_7 root]$ lsls: cannot open directory .: Permission denied 尝试使用ls命令查看根目录下的文件，但因权限不足而失败。 使用usermod命令将test用户添加到wheel组（提权）。 1[root@mysql5_7 /]# usermod test -G wheel 使用echo命令将”1234567”写入file.txt文件。 1[test@mysql5_7 /]$ echo &quot;1234567&quot; &gt; file.txt 使用cat命令查看file.txt文件的内容。 12[test@mysql5_7 /]$ cat file.txt1234567 创建了一个名为test2的用户。 1234[root@mysql5_7 /]# useradd test2[root@mysql5_7 /]# echo &quot;123456&quot; | passwd --stdin test2Changing password for user test2.passwd: all authentication tokens updated successfully. 使用ls -l命令查看file.txt文件的详细权限信息，发现已经对其他用户进行了限制。 12345678[test2@mysql5_7 /]$ ls -l file.txt----rwx---+ 1 root root 8 Aug 11 23:41 file.txt[test2@mysql5_7 /]$ vim file.txt[test2@mysql5_7 /]$ cat file.txtcat: file.txt: Permission denied[test2@mysql5_7 /]$ echo &quot;12334&quot; &gt; file.txtbash: file.txt: Permission denied[test2@mysql5_7 /]$ 使用vim命令尝试编辑file.txt文件，但因权限不足而失败。 使用cat命令尝试查看file.txt文件的内容，但因权限不足而失败。 使用echo命令尝试向file.txt文件写入内容，但因权限不足而失败 删除 test 用户，策略也会相应地被删除 123456789101112[root@mysql5_7 /]# userdel -r test[root@mysql5_7 /]# getfacl file.txt# file: file.txt# owner: root# group: rootuser::---user:1000:rwxgroup::r--mask::rwxother::---# 可以看到用户策略消失了 要删除所有权限，可以使用以下命令： 1setfacl -u username:username file.txt 其中，-u选项用于删除权限。 除了-m选项之外，setfacl命令还可以使用其他选项来指定其他权限和条件。有关setfacl命令的完整语法和选项 123456789101112131415161718192021[root@mysql5_7 ~]# setfacl --helpsetfacl 2.2.51 -- set file access control listsUsage: setfacl [-bkndRLP] &#123; -m|-M|-x|-X ... &#125; file ... -m, --modify=acl modify the current ACL(s) of file(s) -M, --modify-file=file read ACL entries to modify from file -x, --remove=acl remove entries from the ACL(s) of file(s) -X, --remove-file=file read ACL entries to remove from file -b, --remove-all remove all extended ACL entries -k, --remove-default remove the default ACL --set=acl set the ACL of file(s), replacing the current ACL --set-file=file read ACL entries to set from file --mask do recalculate the effective rights mask -n, --no-mask don&#x27;t recalculate the effective rights mask -d, --default operations apply to the default ACL -R, --recursive recurse into subdirectories -L, --logical logical walk, follow symbolic links -P, --physical physical walk, do not follow symbolic links --restore=file restore ACLs (inverse of `getfacl -R&#x27;) --test test mode (ACLs are not modified) -v, --version print version and exit -h, --help this help text 总结本文介绍了Linux中使用setfacl命令来管理文件和目录的权限策略。setfacl命令允许用户添加、删除和修改文件和目录的权限，并根据用户、组、用户组和其他条件来定义权限。文章给出了setfacl命令的语法和示例，以及如何使用getfacl命令列出当前文件和目录的所有权限，并使用setfacl -u username:username命令删除所有权限。此外，文章还提到了setfacl命令的其他选项和完整语法。要了解更多相关信息，请参阅Linux文档或相关文档。","categories":["Linux","基础操作"]},{"title":"日常","path":"/more/index.html","content":"第一步：打开 GitHub打开 Stellar 的 GitHub 页面。第二步：点击 Star如果发现右上角的 Star 还没点亮，就点亮它！"},{"title":"公众号原点独白","path":"/wiki/stellar/index.html","content":"原点独白是我从2020年开始运营的账号。 转眼间，它就要4岁啦，然后悄悄告诉你们，聊天界面发消息我都可以看的见，快来和我一起聊聊天呗～ 如果你喜欢原点独白的话，希望能把它分享给你的朋友们。 有你们的帮助和支持，原点独白才会走得更远。 期待能够在这里认识更多新面孔。"}]